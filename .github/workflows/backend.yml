name: Backend CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'packages/backend/**'
      - '.github/workflows/backend.yml'

env:
  CI: true

defaults:
  run:
    working-directory: packages/backend

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        java-version: [ '21' ]
        include:
          - os: ubuntu-latest
            executable-suffix: ''
#          - os: windows-latest
#            executable-suffix: '.exe'

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up GraalVM (Java ${{ matrix.java-version }})
        uses: graalvm/setup-graalvm@v1
        with:
          version: '${{ matrix.graalvm-version }}'
          java-version: '${{ matrix.java-version }}'
          cache: 'gradle'

      - name: Read rights to gradlew
        run: chmod +x gradlew

      - name: Run tests
        run: ./gradlew test

      - name: Get Project Version
        id: get_version
        run: echo "version=$(./gradlew -q printVersion)" >> $GITHUB_OUTPUT

      - id: executable
        run: echo "executable_name=hollybike-${{ runner.os }}-${{ steps.get_version.outputs.version }}-x86_64" >> $GITHUB_OUTPUT

      - id: version_full_name
        run: echo "version_full_name=hollybike_server-${{ steps.get_version.outputs.version }}" >> $GITHUB_OUTPUT

      - name: Run native compile
        run: ./gradlew nativeCompile -Pimage_name=${{ steps.executable.outputs.executable_name }}

      - name: Archive binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.executable.outputs.executable_name }}
          path: build

      - name: Archive binary 2
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.executable.outputs.executable_name }}_target
          path: target

      - name: Upload release
        run: gh release upload ${{ steps.get_version.outputs.version_full_name }} build/native/nativeCompile/${{ steps.executable.outputs.executable_name }}${{ matrix.executable-suffix }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}