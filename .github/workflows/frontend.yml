name: Frontend CI/CD

on:
  workflow_call:
    inputs:
      externall_call:
        description: 'To distinguish workflow_call from regular events'
        type: boolean
        required: false
        default: true
      version:
        description: 'Version of the release'
        type: string
        required: true

    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
        description: 'AWS Access Key ID'
      AWS_SECRET_ACCESS_KEY:
        required: true
        description: 'AWS Secret Access Key'

  pull_request:
    branches:
      - main
    paths:
      - 'packages/frontend/**'
      - '.github/workflows/frontend.yml'

env:
  CI: true

defaults:
  run:
    working-directory: packages/frontend

jobs:
  build:
    name: Build & Deploy
    runs-on: ubuntu-latest

    permissions:
      checks: read
      contents: read
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install

      - name: Run linter
        run: bun run lint

      - name: Try building application
        run: bun run build

      - name: Upload artifacts
        if: ${{ inputs.externall_call }}
        uses: actions/upload-artifact@v4
        with:
          name: HollyBike-Frontend-${{ inputs.version }}
          path: packages/frontend/dist
          retention-days: 1

      - name: Configure AWS credentials
        if: ${{ inputs.externall_call }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Check and wait for workflow ${{ vars.INFRA_WORKFLOW }} to finish
        if: ${{ inputs.externall_call }}
        uses: ./.github/actions/check-and-wait
        with:
          workflow: ${{ vars.INFRA_WORKFLOW }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Sync cacheable files with S3 bucket
        if: ${{ inputs.externall_call }}
        run: aws s3 sync ./dist s3://${{ vars.AWS_S3_BUCKET }} --cache-control 'max-age=31536000' --exclude "*.html"

      - name: Sync non cacheable files with S3 bucket
        if: ${{ inputs.externall_call }}
        run: aws s3 sync ./dist s3://${{ vars.AWS_S3_BUCKET }} --cache-control 'no-cache'

      - name: Create CloudFront invalidation
        if: ${{ inputs.externall_call }}
        run: aws cloudfront create-invalidation --distribution-id ${{ vars.AWS_CF_DIST_ID }} --paths "/*"