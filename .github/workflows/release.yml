name: Release CI/CD

on:
  workflow_dispatch:
  release:
    types: [ created ]

env:
  CI: true

permissions:
  contents: write

jobs:
#  build-app-android:
#    name: Build App Android
#    runs-on: ubuntu-latest
#
#    env:
#      KEYSTORE_PATH: android/upload-keystore.jks
#      KEY_PROPS_PATH: android/key.properties
#
#    defaults:
#      run:
#        working-directory: packages/app
#        shell: bash
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Cache Flutter dependencies
#        uses: actions/cache@v4
#        with:
#          path: /opt/hostedtoolcache/flutter
#          key: flutter-install-cache
#
#      - name: Set up Flutter
#        uses: subosito/flutter-action@v2
#        with:
#          channel: stable
#
#      - name: Install dependencies
#        run: flutter pub get
#
#      - name: Decode Android keystore
#        run: echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > ${{ env.KEYSTORE_PATH }}
#
#      - name: Copy keystore
#        run: cp ${{ env.KEYSTORE_PATH }} android/app/upload-keystore.jks
#
#      - name: Decode Android key properties
#        run: echo "${{ secrets.ANDROID_KEY_PROPERTIES }}" | base64 --decode > ${{ env.KEY_PROPS_PATH }}
#
#      - name: Build APK
#        run: flutter build apk --release
#
#      - name: Rename APK
#        run: mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/hollybike-Android-${{ github.event.release.tag_name }}.apk
#
#      - name: Upload release
#        if: github.event.release.tag_name
#        run: |
#          gh release upload \
#              ${{ github.event.release.tag_name }} \
#              build/app/outputs/flutter-apk/hollybike-Android-${{ github.event.release.tag_name }}.apk
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: packages/frontend
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install

      - name: Try building application
        run: bun run build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-${{ github.event.release.tag_name || 'snapshot' }}
          path: packages/frontend/dist
          retention-days: 1


#  build-backend:
#    name: Build Backend
#    needs:
#      - build-frontend
#    strategy:
#      matrix:
#        os: [ ubuntu-latest, windows-latest ]
#        java-version: [ '21' ]
#        include:
#          - os: ubuntu-latest
#            executable-suffix: ''
#          - os: windows-latest
#            executable-suffix: '.exe'
#
#    runs-on: ${{ matrix.os }}
#
#    defaults:
#      run:
#        working-directory: packages/backend
#        shell: bash
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Set up GraalVM (Java ${{ matrix.java-version }})
#        uses: graalvm/setup-graalvm@v1
#        with:
#          java-version: '${{ matrix.java-version }}'
#          cache: 'gradle'
#
#      - name: Read rights to gradlew
#        run: chmod +x gradlew
#
#      - id: executable
#        run: echo "executable_name=hollybike-${{ runner.os }}-${{ github.event.release.tag_name || 'snapshot' }}-x86_64" >> $GITHUB_OUTPUT
#
#      - name: Download a single artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: frontend-${{ github.event.release.tag_name || 'snapshot' }}
#          path: packages/backend/src/main/resources/front
#
#      - name: Run native compile
#        run: ./gradlew nativeCompile -Pimage_name=${{ steps.executable.outputs.executable_name }}
#
#      - name: Upload release
#        if: github.event.release.tag_name
#        run: |
#          gh release upload \
#              ${{ github.event.release.tag_name }} \
#              build/native/nativeCompile/${{ steps.executable.outputs.executable_name }}${{ matrix.executable-suffix }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}