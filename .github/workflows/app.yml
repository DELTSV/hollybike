name: Flutter App CI/CD

on:
  workflow_call:
    inputs:
      externall_call:
        description: 'To distinguish workflow_call from regular events'
        type: boolean
        required: false
        default: true
    secrets:
      ANDROID_KEYSTORE:
        required: true
        description: 'Android keystore'
      ANDROID_KEY_PROPERTIES:
        required: true
        description: 'Android key properties'
      PRODUCTION_CREDENTIAL_FILE:
        required: true
        description: 'Production credential file'
  pull_request:
    branches:
      - main
    paths:
      - 'packages/app/**'
      - '.github/workflows/app.yml'

env:
  CI: true

defaults:
  run:
    working-directory: packages/app

permissions:
  contents: write

jobs:
  build:
    name: Build App
    runs-on: ubuntu-latest

    env:
      AAB_PATH: packages/app/build/app/outputs/bundle/release/app-release.aab
      KEYSTORE_PATH: android/upload-keystore.jks
      KEY_PROPS_PATH: android/key.properties
      SERVICE_ACCOUNT_PATH: store_credentials.json

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: /opt/hostedtoolcache/flutter
          key: flutter-install-cache

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze code
        run: flutter analyze

      - name: Run tests
        run: flutter test

      - name: Decode Android keystore
        if: ${{ inputs.externall_call }}
        run: echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > ${{ env.KEYSTORE_PATH }}

      - name: Copy keystore
        if: ${{ inputs.externall_call }}
        run: cp ${{ env.KEYSTORE_PATH }} android/app/upload-keystore.jks

      - name: Decode Android key properties
        if: ${{ inputs.externall_call }}
        run: echo "${{ secrets.ANDROID_KEY_PROPERTIES }}" | base64 --decode > ${{ env.KEY_PROPS_PATH }}

      - name: Decode Android Service Account
        if: ${{ inputs.externall_call }}
        run: echo "${{ secrets.PRODUCTION_CREDENTIAL_FILE }}" | base64 --decode > ${{ env.SERVICE_ACCOUNT_PATH }}

      - name: Build APK
        if: ${{ inputs.externall_call }}
        run: flutter build apk --release

      - name: Rename APK
        if: ${{ inputs.externall_call }}
        run: mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/hollybike-Android-${{ github.event.release.tag_name }}.apk

#      - name: Upload release
#        if: github.event_name == 'workflow_dispatch' || github.event_name == 'release'
#        run: |
#          gh release upload \
#              ${{ github.event.release.tag_name }} \
#              build/app/outputs/flutter-apk/hollybike-Android-${{ github.event.release.tag_name }}.apk

      - name: Upload APK to artifacts
        if: ${{ inputs.externall_call }}
        uses: actions/upload-artifact@v4
        with:
          name: hollybike-Android-${{ github.event.release.tag_name }}
          path: build/app/outputs/flutter-apk/hollybike-Android-${{ github.event.release.tag_name }}.apk
          retention-days: 1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      - name: Build aab
#        if: ${{ inputs.externall_call }}
#        run: |
#          flutter build appbundle \
#            --release

#      - name: Deploy to Play Store (Internal testing)
#        if: github.event_name == 'workflow_dispatch' || github.event_name == 'release'
#        uses: r0adkll/upload-google-play@v1
#        with:
#          serviceAccountJson: packages/app/${{ env.SERVICE_ACCOUNT_PATH }}
#          packageName: com.hollybike.hollybike
#          releaseFiles: ${{ env.AAB_PATH }}
#          status: draft
#          track: internal
