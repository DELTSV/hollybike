  {
    "name":"[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
  },
  {
    "name":"android.os.Build$VERSION"
  },
  {
    "name":"android.util.Log"
  },
  {
    "name":"ch.qos.logback.classic.encoder.PatternLayoutEncoder",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.classic.joran.SerializedModelConfigurator",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.classic.pattern.DateConverter",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.classic.pattern.LevelConverter",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.classic.pattern.LoggerConverter",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.classic.pattern.MessageConverter",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.classic.pattern.ThreadConverter",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.classic.spi.LogbackServiceProvider"
  },
  {
    "name":"ch.qos.logback.classic.util.DefaultJoranConfigurator",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.core.ConsoleAppender",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.core.OutputStreamAppender",
    "methods":[{"name":"setEncoder","parameterTypes":["ch.qos.logback.core.encoder.Encoder"] }]
  },
  {
    "name":"ch.qos.logback.core.encoder.Encoder",
    "methods":[{"name":"valueOf","parameterTypes":["java.lang.String"] }]
  },
  {
    "name":"ch.qos.logback.core.encoder.LayoutWrappingEncoder",
    "methods":[{"name":"setParent","parameterTypes":["ch.qos.logback.core.spi.ContextAware"] }]
  },
  {
    "name":"ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
    "methods":[{"name":"setPattern","parameterTypes":["java.lang.String"] }]
  },
  {
    "name":"ch.qos.logback.core.spi.ContextAware",
    "methods":[{"name":"valueOf","parameterTypes":["java.lang.String"] }]
  },
  {
    "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"com.intellij.rt.execution.application.AppMainV2$Agent",
    "methods":[{"name":"premain","parameterTypes":["java.lang.String","java.lang.instrument.Instrumentation"] }]
  },
  {
    "name":"com.sun.crypto.provider.HmacCore$HmacSHA256",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"com.sun.crypto.provider.PBKDF2Core$HmacSHA256",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"hollybike.api.ApplicationKt",
    "queryAllPublicMethods":true,
    "methods":[{"name":"configureSerialization","parameterTypes":["io.ktor.server.application.Application"] }, {"name":"main","parameterTypes":[] }, {"name":"module","parameterTypes":["io.ktor.server.application.Application"] }]
  },
  {
    "name":"hollybike.api.repository.Association",
    "methods":[{"name":"getId","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getStatus","parameterTypes":[] }]
  },
  {
    "name":"hollybike.api.repository.Associations"
  },
  {
    "name":"hollybike.api.repository.User",
    "methods":[{"name":"getAssociation","parameterTypes":[] }, {"name":"getEmail","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"getPassword","parameterTypes":[] }, {"name":"getScope","parameterTypes":[] }, {"name":"getStatus","parameterTypes":[] }, {"name":"getUsername","parameterTypes":[] }, {"name":"setEmail","parameterTypes":["java.lang.String"] }, {"name":"setPassword","parameterTypes":["java.lang.String"] }, {"name":"setScope","parameterTypes":["int"] }, {"name":"setStatus","parameterTypes":["int"] }]
  },
  {
    "name":"hollybike.api.repository.User$Companion"
  },
  {
    "name":"hollybike.api.repository.Users"
  },
  {
    "name":"hollybike.api.types.auth.TLogin",
    "fields":[{"name":"Companion"}]
  },
  {
    "name":"hollybike.api.types.auth.TLogin$Companion",
    "methods":[{"name":"serializer","parameterTypes":[] }]
  },
  {
    "name":"io.ktor.http.HttpStatusCode"
  },
  {
    "name":"io.ktor.network.selector.InterestSuspensionsMap",
    "fields":[{"name":"acceptHandlerReference"}, {"name":"connectHandlerReference"}, {"name":"readHandlerReference"}, {"name":"writeHandlerReference"}]
  },
  {
    "name":"io.ktor.network.selector.LockFreeMPSCQueue",
    "fields":[{"name":"_cur"}]
  },
  {
    "name":"io.ktor.network.selector.LockFreeMPSCQueueCore",
    "fields":[{"name":"_next"}, {"name":"_state"}]
  },
  {
    "name":"io.ktor.network.selector.SelectableBase",
    "fields":[{"name":"_interestedOps"}]
  },
  {
    "name":"io.ktor.serialization.kotlinx.json.KotlinxSerializationJsonExtensionProvider"
  },
  {
    "name":"io.ktor.server.application.Application"
  },
  {
    "name":"io.ktor.server.cio.internal.WeakTimeoutQueue$WeakTimeoutCoroutine",
    "fields":[{"name":"state"}]
  },
  {
    "name":"io.ktor.util.collections.CopyOnWriteHashMap",
    "fields":[{"name":"current"}]
  },
  {
    "name":"io.ktor.util.internal.LockFreeLinkedListNode",
    "fields":[{"name":"_next"}, {"name":"_prev"}, {"name":"_removedRef"}]
  },
  {
    "name":"io.ktor.utils.io.ByteBufferChannel",
    "fields":[{"name":"_closed"}, {"name":"_readOp"}, {"name":"_state"}, {"name":"_writeOp"}]
  },
  {
    "name":"io.ktor.utils.io.ByteReadChannel"
  },
  {
    "name":"io.ktor.utils.io.core.internal.ChunkBuffer",
    "fields":[{"name":"nextRef"}, {"name":"refCount"}]
  },
  {
    "name":"io.ktor.utils.io.internal.CancellableReusableContinuation",
    "fields":[{"name":"jobCancellationHandler"}, {"name":"state"}]
  },
  {
    "name":"io.ktor.utils.io.internal.JoiningState",
    "fields":[{"name":"_closeWaitJob"}]
  },
  {
    "name":"io.ktor.utils.io.internal.RingBufferCapacity",
    "fields":[{"name":"_availableForRead$internal"}, {"name":"_availableForWrite$internal"}, {"name":"_pendingToFlush"}]
  },
  {
    "name":"io.ktor.utils.io.pool.DefaultPool",
    "fields":[{"name":"top"}]
  },
  {
    "name":"java.beans.PropertyVetoException"
  },
  {
    "name":"java.io.FilePermission"
  },
  {
    "name":"java.io.Serializable",
    "allDeclaredFields":true,
    "allDeclaredClasses":true,
    "queryAllDeclaredMethods":true
  },
  {
    "name":"java.lang.CharSequence"
  },
  {
    "name":"java.lang.Class",
    "methods":[{"name":"getPermittedSubclasses","parameterTypes":[] }, {"name":"getRecordComponents","parameterTypes":[] }, {"name":"isRecord","parameterTypes":[] }, {"name":"isSealed","parameterTypes":[] }]
  },
  {
    "name":"java.lang.ClassValue"
  },
  {
    "name":"java.lang.Comparable"
  },
  {
    "name":"java.lang.Integer"
  },
  {
    "name":"java.lang.Number"
  },
  {
    "name":"java.lang.Object",
    "queryAllPublicMethods":true
  },
  {
    "name":"java.lang.ObjectBeanInfo"
  },
  {
    "name":"java.lang.ObjectCustomizer"
  },
  {
    "name":"java.lang.RuntimePermission"
  },
  {
    "name":"java.lang.SecurityManager",
    "methods":[{"name":"checkPermission","parameterTypes":["java.security.Permission"] }]
  },
  {
    "name":"java.lang.String"
  },
  {
    "name":"java.lang.System",
    "methods":[{"name":"getSecurityManager","parameterTypes":[] }]
  },
  {
    "name":"java.lang.Thread",
    "fields":[{"name":"threadLocalRandomProbe"}]
  },
  {
    "name":"java.lang.invoke.MethodHandles",
    "methods":[{"name":"privateLookupIn","parameterTypes":["java.lang.Class","java.lang.invoke.MethodHandles$Lookup"] }]
  },
  {
    "name":"java.net.NetPermission"
  },
  {
    "name":"java.net.SocketPermission"
  },
  {
    "name":"java.net.StandardSocketOptions"
  },
  {
    "name":"java.net.URLPermission",
    "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
  },
  {
    "name":"java.security.AccessController",
    "methods":[{"name":"doPrivileged","parameterTypes":["java.security.PrivilegedExceptionAction"] }]
  },
  {
    "name":"java.security.AllPermission"
  },
  {
    "name":"java.security.SecureRandomParameters"
  },
  {
    "name":"java.security.SecurityPermission"
  },
  {
    "name":"java.util.ArrayList",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"java.util.PropertyPermission"
  },
  {
    "name":"java.util.concurrent.atomic.AtomicBoolean",
    "fields":[{"name":"value"}]
  },
  {
    "name":"java.util.concurrent.atomic.AtomicReference",
    "fields":[{"name":"value"}]
  },
  {
    "name":"java.util.concurrent.atomic.Striped64",
    "fields":[{"name":"base"}, {"name":"cellsBusy"}]
  },
  {
    "name":"javax.smartcardio.CardPermission"
  },
  {
    "name":"kotlin.Any"
  },
  {
    "name":"kotlin.Boolean"
  },
  {
    "name":"kotlin.CharSequence"
  },
  {
    "name":"kotlin.Comparable"
  },
  {
    "name":"kotlin.Function1"
  },
  {
    "name":"kotlin.Int"
  },
  {
    "name":"kotlin.Metadata",
    "queryAllDeclaredMethods":true,
    "methods":[{"name":"bv","parameterTypes":[] }, {"name":"d1","parameterTypes":[] }, {"name":"d2","parameterTypes":[] }, {"name":"k","parameterTypes":[] }, {"name":"mv","parameterTypes":[] }, {"name":"pn","parameterTypes":[] }, {"name":"xi","parameterTypes":[] }, {"name":"xs","parameterTypes":[] }]
  },
  {
    "name":"kotlin.Number"
  },
  {
    "name":"kotlin.Pair"
  },
  {
    "name":"kotlin.SafePublicationLazyImpl",
    "fields":[{"name":"_value"}]
  },
  {
    "name":"kotlin.String"
  },
  {
    "name":"kotlin.Unit"
  },
  {
    "name":"kotlin.collections.List"
  },
  {
    "name":"kotlin.collections.Map"
  },
  {
    "name":"kotlin.jvm.internal.DefaultConstructorMarker"
  },
  {
    "name":"kotlin.reflect.KClass"
  },
  {
    "name":"kotlin.reflect.jvm.internal.ReflectionFactoryImpl",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"kotlin.reflect.jvm.internal.impl.load.java.ErasedOverridabilityCondition"
  },
  {
    "name":"kotlin.reflect.jvm.internal.impl.load.java.FieldOverridabilityCondition"
  },
  {
    "name":"kotlin.reflect.jvm.internal.impl.load.java.JavaIncompatibilityRulesOverridabilityCondition"
  },
  {
    "name":"kotlin.reflect.jvm.internal.impl.resolve.scopes.DescriptorKindFilter",
    "allPublicFields":true
  },
  {
    "name":"kotlin.reflect.jvm.internal.impl.serialization.deserialization.builtins.BuiltInsLoaderImpl"
  },
  {
    "name":"kotlinx.coroutines.CancellableContinuationImpl",
    "fields":[{"name":"_decisionAndIndex"}, {"name":"_parentHandle"}, {"name":"_state"}]
  },
  {
    "name":"kotlinx.coroutines.CancelledContinuation",
    "fields":[{"name":"_resumed"}]
  },
  {
    "name":"kotlinx.coroutines.CompletedExceptionally",
    "fields":[{"name":"_handled"}]
  },
  {
    "name":"kotlinx.coroutines.DispatchedCoroutine",
    "fields":[{"name":"_decision"}]
  },
  {
    "name":"kotlinx.coroutines.EventLoopImplBase",
    "fields":[{"name":"_delayed"}, {"name":"_isCompleted"}, {"name":"_queue"}]
  },
  {
    "name":"kotlinx.coroutines.InvokeOnCancelling",
    "fields":[{"name":"_invoked"}]
  },
  {
    "name":"kotlinx.coroutines.JobSupport",
    "fields":[{"name":"_parentHandle"}, {"name":"_state"}]
  },
  {
    "name":"kotlinx.coroutines.JobSupport$Finishing",
    "fields":[{"name":"_exceptionsHolder"}, {"name":"_isCompleting"}, {"name":"_rootCause"}]
  },
  {
    "name":"kotlinx.coroutines.channels.BufferedChannel",
    "fields":[{"name":"_closeCause"}, {"name":"bufferEnd"}, {"name":"bufferEndSegment"}, {"name":"closeHandler"}, {"name":"completedExpandBuffersAndPauseFlag"}, {"name":"receiveSegment"}, {"name":"receivers"}, {"name":"sendSegment"}, {"name":"sendersAndCloseStatus"}]
  },
  {
    "name":"kotlinx.coroutines.internal.AtomicOp",
    "fields":[{"name":"_consensus"}]
  },
  {
    "name":"kotlinx.coroutines.internal.ConcurrentLinkedListNode",
    "fields":[{"name":"_next"}, {"name":"_prev"}]
  },
  {
    "name":"kotlinx.coroutines.internal.DispatchedContinuation",
    "fields":[{"name":"_reusableCancellableContinuation"}]
  },
  {
    "name":"kotlinx.coroutines.internal.LimitedDispatcher",
    "fields":[{"name":"runningWorkers"}]
  },
  {
    "name":"kotlinx.coroutines.internal.LockFreeLinkedListNode",
    "fields":[{"name":"_next"}, {"name":"_prev"}, {"name":"_removedRef"}]
  },
  {
    "name":"kotlinx.coroutines.internal.LockFreeTaskQueue",
    "fields":[{"name":"_cur"}]
  },
  {
    "name":"kotlinx.coroutines.internal.LockFreeTaskQueueCore",
    "fields":[{"name":"_next"}, {"name":"_state"}]
  },
  {
    "name":"kotlinx.coroutines.internal.Segment",
    "fields":[{"name":"cleanedAndPointers"}]
  },
  {
    "name":"kotlinx.coroutines.internal.ThreadSafeHeap",
    "fields":[{"name":"_size"}]
  },
  {
    "name":"kotlinx.coroutines.scheduling.CoroutineScheduler",
    "fields":[{"name":"_isTerminated"}, {"name":"controlState"}, {"name":"parkedWorkersStack"}]
  },
  {
    "name":"kotlinx.coroutines.scheduling.CoroutineScheduler$Worker",
    "fields":[{"name":"workerCtl"}]
  },
  {
    "name":"kotlinx.coroutines.scheduling.WorkQueue",
    "fields":[{"name":"blockingTasksInBuffer"}, {"name":"consumerIndex"}, {"name":"lastScheduledTask"}, {"name":"producerIndex"}]
  },
  {
    "name":"liquibase.AbstractExtensibleObject",
    "queryAllPublicMethods":true
  },
  {
    "name":"liquibase.AbstractExtensibleObjectBeanInfo"
  },
  {
    "name":"liquibase.AbstractExtensibleObjectCustomizer"
  },
  {
    "name":"liquibase.ExtensibleObject",
    "queryAllPublicMethods":true
  },
  {
    "name":"liquibase.GlobalConfiguration"
  },
  {
    "name":"liquibase.change.AbstractChange",
    "queryAllPublicMethods":true
  },
  {
    "name":"liquibase.change.AbstractChangeBeanInfo"
  },
  {
    "name":"liquibase.change.AbstractChangeCustomizer"
  },
  {
    "name":"liquibase.change.AbstractSQLChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"isIgnoreOriginalSplitStatements","parameterTypes":[] }, {"name":"isSplitStatements","parameterTypes":[] }, {"name":"isStripComments","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.AbstractSQLChangeBeanInfo"
  },
  {
    "name":"liquibase.change.AbstractSQLChangeCustomizer"
  },
  {
    "name":"liquibase.change.AbstractTableChange",
    "queryAllPublicMethods":true
  },
  {
    "name":"liquibase.change.AbstractTableChangeBeanInfo"
  },
  {
    "name":"liquibase.change.AbstractTableChangeCustomizer"
  },
  {
    "name":"liquibase.change.Change",
    "queryAllPublicMethods":true
  },
  {
    "name":"liquibase.change.ChangeFactory",
    "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
  },
  {
    "name":"liquibase.change.ChangeWithColumns",
    "queryAllPublicMethods":true
  },
  {
    "name":"liquibase.change.DbmsTargetedChange",
    "queryAllPublicMethods":true
  },
  {
    "name":"liquibase.change.ReplaceIfExists",
    "queryAllPublicMethods":true
  },
  {
    "name":"liquibase.change.core.AbstractModifyDataChange",
    "queryAllPublicMethods":true
  },
  {
    "name":"liquibase.change.core.AbstractModifyDataChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.AbstractModifyDataChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.AddAutoIncrementChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.AddAutoIncrementChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.AddAutoIncrementChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.AddColumnChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.AddColumnChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.AddColumnChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.AddDefaultValueChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.AddDefaultValueChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.AddDefaultValueChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.AddForeignKeyConstraintChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.AddForeignKeyConstraintChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.AddForeignKeyConstraintChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.AddLookupTableChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.AddLookupTableChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.AddLookupTableChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.AddNotNullConstraintChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.AddNotNullConstraintChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.AddNotNullConstraintChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.AddPrimaryKeyChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.AddPrimaryKeyChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.AddPrimaryKeyChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.AddUniqueConstraintChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.AddUniqueConstraintChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.AddUniqueConstraintChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.AlterSequenceChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"isOrdered","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.AlterSequenceChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.AlterSequenceChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.CreateIndexChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"isUnique","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.CreateIndexChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.CreateIndexChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.CreateProcedureChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"isRelativeToChangelogFile","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.CreateProcedureChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.CreateProcedureChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.CreateSequenceChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"isOrdered","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.CreateSequenceChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.CreateSequenceChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.CreateTableChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.CreateTableChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.CreateTableChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.CreateViewChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.CreateViewChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.CreateViewChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.DeleteDataChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.DeleteDataChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.DeleteDataChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.DropAllForeignKeyConstraintsChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.DropAllForeignKeyConstraintsChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.DropAllForeignKeyConstraintsChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.DropColumnChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.DropColumnChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.DropColumnChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.DropDefaultValueChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.DropDefaultValueChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.DropDefaultValueChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.DropForeignKeyConstraintChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.DropForeignKeyConstraintChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.DropForeignKeyConstraintChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.DropIndexChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.DropIndexChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.DropIndexChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.DropNotNullConstraintChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.DropNotNullConstraintChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.DropNotNullConstraintChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.DropPrimaryKeyChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.DropPrimaryKeyChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.DropPrimaryKeyChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.DropProcedureChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.DropProcedureChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.DropProcedureChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.DropSequenceChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.DropSequenceChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.DropSequenceChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.DropTableChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"isCascadeConstraints","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.DropTableChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.DropTableChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.DropUniqueConstraintChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.DropUniqueConstraintChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.DropUniqueConstraintChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.DropViewChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"isIfExists","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.DropViewChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.DropViewChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.EmptyChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.EmptyChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.EmptyChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.ExecuteShellCommandChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.ExecuteShellCommandChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.ExecuteShellCommandChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.InsertDataChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.InsertDataChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.InsertDataChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.LoadDataChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"isRelativeToChangelogFile","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.LoadDataChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.LoadDataChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.LoadUpdateDataChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.LoadUpdateDataChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.LoadUpdateDataChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.MergeColumnChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.MergeColumnChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.MergeColumnChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.ModifyDataTypeChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.ModifyDataTypeChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.ModifyDataTypeChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.OutputChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.OutputChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.OutputChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.RawSQLChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"isOriginalSplitStatements","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.RawSQLChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.RawSQLChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.RenameColumnChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.RenameColumnChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.RenameColumnChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.RenameSequenceChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.RenameSequenceChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.RenameSequenceChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.RenameTableChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.RenameTableChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.RenameTableChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.RenameViewChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.RenameViewChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.RenameViewChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.SQLFileChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"isDoExpandExpressionsInGenerateChecksum","parameterTypes":[] }, {"name":"isOriginalSplitStatements","parameterTypes":[] }, {"name":"isRelativeToChangelogFile","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.SQLFileChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.SQLFileChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.SetColumnRemarksChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.SetColumnRemarksChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.SetColumnRemarksChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.SetTableRemarksChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.SetTableRemarksChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.SetTableRemarksChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.StopChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.StopChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.StopChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.TagDatabaseChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.TagDatabaseChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.TagDatabaseChangeCustomizer"
  },
  {
    "name":"liquibase.change.core.UpdateDataChange",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.core.UpdateDataChangeBeanInfo"
  },
  {
    "name":"liquibase.change.core.UpdateDataChangeCustomizer"
  },
  {
    "name":"liquibase.change.custom.CustomChangeWrapper",
    "queryAllPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.change.custom.CustomChangeWrapperBeanInfo"
  },
  {
    "name":"liquibase.change.custom.CustomChangeWrapperCustomizer"
  },
  {
    "name":"liquibase.changelog.ChangeLogHistoryServiceFactory",
    "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
  },
  {
    "name":"liquibase.changelog.MockChangeLogHistoryService"
  },
  {
    "name":"liquibase.changelog.StandardChangeLogHistoryService",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.changeset.StandardChangeSetService"
  },
  {
    "name":"liquibase.command.CommandFactory",
    "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
  },
  {
    "name":"liquibase.command.core.CalculateChecksumCommandStep"
  },
  {
    "name":"liquibase.command.core.ChangelogSyncCommandStep"
  },
  {
    "name":"liquibase.command.core.ChangelogSyncSqlCommandStep"
  },
  {
    "name":"liquibase.command.core.ChangelogSyncToTagCommandStep"
  },
  {
    "name":"liquibase.command.core.ChangelogSyncToTagSqlCommandStep"
  },
  {
    "name":"liquibase.command.core.ClearChecksumsCommandStep"
  },
  {
    "name":"liquibase.command.core.DbDocCommandStep"
  },
  {
    "name":"liquibase.command.core.DiffChangelogCommandStep"
  },
  {
    "name":"liquibase.command.core.DiffCommandStep"
  },
  {
    "name":"liquibase.command.core.DropAllCommandStep"
  },
  {
    "name":"liquibase.command.core.ExecuteSqlCommandStep"
  },
  {
    "name":"liquibase.command.core.FutureRollbackCountSqlCommandStep"
  },
  {
    "name":"liquibase.command.core.FutureRollbackFromTagSqlCommandStep"
  },
  {
    "name":"liquibase.command.core.FutureRollbackSqlCommandStep"
  },
  {
    "name":"liquibase.command.core.GenerateChangelogCommandStep"
  },
  {
    "name":"liquibase.command.core.HistoryCommandStep"
  },
  {
    "name":"liquibase.command.core.InternalHistoryCommandStep"
  },
  {
    "name":"liquibase.command.core.InternalSnapshotCommandStep"
  },
  {
    "name":"liquibase.command.core.ListLocksCommandStep"
  },
  {
    "name":"liquibase.command.core.MarkNextChangesetRanCommandStep"
  },
  {
    "name":"liquibase.command.core.MarkNextChangesetRanSqlCommandStep"
  },
  {
    "name":"liquibase.command.core.ReleaseLocksCommandStep"
  },
  {
    "name":"liquibase.command.core.RollbackCommandStep"
  },
  {
    "name":"liquibase.command.core.RollbackCountCommandStep"
  },
  {
    "name":"liquibase.command.core.RollbackCountSqlCommandStep"
  },
  {
    "name":"liquibase.command.core.RollbackSqlCommandStep"
  },
  {
    "name":"liquibase.command.core.RollbackToDateCommandStep"
  },
  {
    "name":"liquibase.command.core.RollbackToDateSqlCommandStep"
  },
  {
    "name":"liquibase.command.core.SnapshotCommandStep"
  },
  {
    "name":"liquibase.command.core.SnapshotReferenceCommandStep"
  },
  {
    "name":"liquibase.command.core.StartH2CommandStep"
  },
  {
    "name":"liquibase.command.core.StatusCommandStep"
  },
  {
    "name":"liquibase.command.core.TagCommandStep"
  },
  {
    "name":"liquibase.command.core.TagExistsCommandStep"
  },
  {
    "name":"liquibase.command.core.UnexpectedChangesetsCommandStep"
  },
  {
    "name":"liquibase.command.core.UpdateCommandStep",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.command.core.UpdateCountCommandStep"
  },
  {
    "name":"liquibase.command.core.UpdateCountSqlCommandStep"
  },
  {
    "name":"liquibase.command.core.UpdateSqlCommandStep"
  },
  {
    "name":"liquibase.command.core.UpdateTestingRollbackCommandStep"
  },
  {
    "name":"liquibase.command.core.UpdateToTagCommandStep"
  },
  {
    "name":"liquibase.command.core.UpdateToTagSqlCommandStep"
  },
  {
    "name":"liquibase.command.core.ValidateCommandStep"
  },
  {
    "name":"liquibase.command.core.helpers.ChangeExecListenerCommandStep",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.command.core.helpers.DatabaseChangelogCommandStep",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.command.core.helpers.DbUrlConnectionArgumentsCommandStep",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.command.core.helpers.DbUrlConnectionCommandStep",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.command.core.helpers.DiffOutputControlCommandStep"
  },
  {
    "name":"liquibase.command.core.helpers.LockServiceCommandStep"
  },
  {
    "name":"liquibase.command.core.helpers.OutputWriterCommandStep"
  },
  {
    "name":"liquibase.command.core.helpers.PreCompareCommandStep"
  },
  {
    "name":"liquibase.command.core.helpers.ReferenceDatabaseOutputWriterCommandStep"
  },
  {
    "name":"liquibase.command.core.helpers.ReferenceDbUrlConnectionCommandStep"
  },
  {
    "name":"liquibase.command.core.helpers.ShowSummaryArgument",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.configuration.ConfiguredValueModifierFactory",
    "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
  },
  {
    "name":"liquibase.configuration.LiquibaseConfiguration",
    "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
  },
  {
    "name":"liquibase.configuration.core.DeprecatedConfigurationValueProvider"
  },
  {
    "name":"liquibase.configuration.core.EnvironmentValueProvider"
  },
  {
    "name":"liquibase.configuration.core.ScopeValueProvider"
  },
  {
    "name":"liquibase.configuration.core.SystemPropertyValueProvider"
  },
  {
    "name":"liquibase.database.LiquibaseTableNamesFactory",
    "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
  },
  {
    "name":"liquibase.database.StandardLiquibaseTableNames"
  },
  {
    "name":"liquibase.database.core.CockroachDatabase"
  },
  {
    "name":"liquibase.database.core.DB2Database"
  },
  {
    "name":"liquibase.database.core.Db2zDatabase"
  },
  {
    "name":"liquibase.database.core.DerbyDatabase"
  },
  {
    "name":"liquibase.database.core.EnterpriseDBDatabase"
  },
  {
    "name":"liquibase.database.core.FirebirdDatabase"
  },
  {
    "name":"liquibase.database.core.H2Database"
  },
  {
    "name":"liquibase.database.core.HsqlDatabase"
  },
  {
    "name":"liquibase.database.core.InformixDatabase"
  },
  {
    "name":"liquibase.database.core.Ingres9Database"
  },
  {
    "name":"liquibase.database.core.MSSQLDatabase"
  },
  {
    "name":"liquibase.database.core.MariaDBDatabase"
  },
  {
    "name":"liquibase.database.core.MockDatabase"
  },
  {
    "name":"liquibase.database.core.MySQLDatabase"
  },
  {
    "name":"liquibase.database.core.OracleDatabase"
  },
  {
    "name":"liquibase.database.core.PostgresDatabase",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.database.core.SQLiteDatabase"
  },
  {
    "name":"liquibase.database.core.SnowflakeDatabase"
  },
  {
    "name":"liquibase.database.core.SybaseASADatabase"
  },
  {
    "name":"liquibase.database.core.SybaseDatabase"
  },
  {
    "name":"liquibase.database.core.UnsupportedDatabase"
  },
  {
    "name":"liquibase.database.jvm.JdbcConnectionPatterns"
  },
  {
    "name":"liquibase.datatype.core.BigIntType"
  },
  {
    "name":"liquibase.datatype.core.BinaryTypeSnowflake",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.datatype.core.BlobType",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.datatype.core.BooleanType",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.datatype.core.CharType"
  },
  {
    "name":"liquibase.datatype.core.ClobType",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.datatype.core.ClobTypeSnowflake",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.datatype.core.CurrencyType"
  },
  {
    "name":"liquibase.datatype.core.DatabaseFunctionType"
  },
  {
    "name":"liquibase.datatype.core.DateTimeType",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.datatype.core.DateType"
  },
  {
    "name":"liquibase.datatype.core.DecimalType"
  },
  {
    "name":"liquibase.datatype.core.DoubleDataTypeSnowflake",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.datatype.core.DoubleType",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.datatype.core.FloatType"
  },
  {
    "name":"liquibase.datatype.core.IntType"
  },
  {
    "name":"liquibase.datatype.core.MediumIntType"
  },
  {
    "name":"liquibase.datatype.core.NCharType"
  },
  {
    "name":"liquibase.datatype.core.NVarcharType"
  },
  {
    "name":"liquibase.datatype.core.NumberType"
  },
  {
    "name":"liquibase.datatype.core.SmallIntType"
  },
  {
    "name":"liquibase.datatype.core.TextDataTypeSnowflake",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.datatype.core.TimeType"
  },
  {
    "name":"liquibase.datatype.core.TimestampNTZTypeSnowflake",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.datatype.core.TimestampType"
  },
  {
    "name":"liquibase.datatype.core.TinyIntType"
  },
  {
    "name":"liquibase.datatype.core.UUIDType"
  },
  {
    "name":"liquibase.datatype.core.UnknownType"
  },
  {
    "name":"liquibase.datatype.core.VarcharType"
  },
  {
    "name":"liquibase.datatype.core.XMLType"
  },
  {
    "name":"liquibase.diff.compare.core.CatalogComparator"
  },
  {
    "name":"liquibase.diff.compare.core.ColumnComparator"
  },
  {
    "name":"liquibase.diff.compare.core.DefaultDatabaseObjectComparator"
  },
  {
    "name":"liquibase.diff.compare.core.ForeignKeyComparator"
  },
  {
    "name":"liquibase.diff.compare.core.IndexComparator"
  },
  {
    "name":"liquibase.diff.compare.core.PrimaryKeyComparator"
  },
  {
    "name":"liquibase.diff.compare.core.SchemaComparator"
  },
  {
    "name":"liquibase.diff.compare.core.TableComparator"
  },
  {
    "name":"liquibase.diff.compare.core.UniqueConstraintComparator"
  },
  {
    "name":"liquibase.executor.ExecutorService",
    "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
  },
  {
    "name":"liquibase.executor.jvm.JdbcExecutor",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.executor.jvm.SnowflakeJdbcExecutor"
  },
  {
    "name":"liquibase.integration.commandline.LiquibaseCommandLineConfiguration"
  },
  {
    "name":"liquibase.lockservice.LockServiceImpl"
  },
  {
    "name":"liquibase.lockservice.MockLockService"
  },
  {
    "name":"liquibase.lockservice.OfflineLockService"
  },
  {
    "name":"liquibase.lockservice.StandardLockService",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"liquibase.logging.core.BufferedLogService"
  },
  {
    "name":"liquibase.logging.core.CompositeLogService"
  },
  {
    "name":"liquibase.logging.core.DefaultLoggerConfiguration"
  },
  {
    "name":"liquibase.logging.core.JavaLogService"
  },
  {
    "name":"liquibase.logging.core.LogServiceFactory",
    "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
  },
  {
    "name":"liquibase.logging.mdc.MdcManagerFactory",
    "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
  },
  {
    "name":"liquibase.logging.mdc.NoOpMdcManager"
  },
  {
    "name":"liquibase.parser.ChangeLogParserConfiguration"
  },
  {
    "name":"liquibase.parser.core.formattedsql.FormattedSqlChangeLogParser"
  },
  {
    "name":"liquibase.parser.core.json.JsonChangeLogParser"
  },
  {
    "name":"liquibase.parser.core.sql.SqlChangeLogParser"
  },
  {
    "name":"liquibase.parser.core.xml.XMLChangeLogSAXParser"
  },
  {
    "name":"liquibase.parser.core.yaml.YamlChangeLogParser"
  },
  {
    "name":"liquibase.plugin.AbstractPlugin",
    "queryAllPublicMethods":true
  },
  {
    "name":"liquibase.plugin.AbstractPluginBeanInfo"
  },
  {
    "name":"liquibase.plugin.AbstractPluginCustomizer"
  },
  {
    "name":"liquibase.plugin.Plugin",
    "queryAllPublicMethods":true
  },
  {
    "name":"liquibase.report.ShowSummaryGeneratorFactory",
    "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
  },
  {
    "name":"liquibase.report.StandardShowSummaryGenerator"
  },
  {
    "name":"liquibase.servicelocator.StandardServiceLocator"
  },
  {
    "name":"liquibase.snapshot.jvm.CatalogSnapshotGenerator"
  },
  {
    "name":"liquibase.snapshot.jvm.ColumnSnapshotGenerator"
  },
  {
    "name":"liquibase.snapshot.jvm.ColumnSnapshotGeneratorH2"
  },
  {
    "name":"liquibase.snapshot.jvm.ColumnSnapshotGeneratorInformix"
  },
  {
    "name":"liquibase.snapshot.jvm.ColumnSnapshotGeneratorOracle"
  },
  {
    "name":"liquibase.snapshot.jvm.DataSnapshotGenerator"
  },
  {
    "name":"liquibase.snapshot.jvm.ForeignKeySnapshotGenerator"
  },
  {
    "name":"liquibase.snapshot.jvm.IndexSnapshotGenerator"
  },
  {
    "name":"liquibase.snapshot.jvm.PrimaryKeySnapshotGenerator"
  },
  {
    "name":"liquibase.snapshot.jvm.SchemaSnapshotGenerator"
  },
  {
    "name":"liquibase.snapshot.jvm.SchemaSnapshotGeneratorSnowflake"
  },
  {
    "name":"liquibase.snapshot.jvm.SequenceSnapshotGenerator"
  },
  {
    "name":"liquibase.snapshot.jvm.SequenceSnapshotGeneratorSnowflake"
  },
  {
    "name":"liquibase.snapshot.jvm.TableSnapshotGenerator"
  },
  {
    "name":"liquibase.snapshot.jvm.UniqueConstraintSnapshotGenerator"
  },
  {
    "name":"liquibase.snapshot.jvm.UniqueConstraintSnapshotGeneratorSnowflake"
  },
  {
    "name":"liquibase.snapshot.jvm.ViewSnapshotGenerator"
  },
  {
    "name":"liquibase.sql.SqlConfiguration"
  },
  {
    "name":"liquibase.sqlgenerator.core.AddAutoIncrementGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.AddAutoIncrementGeneratorDB2"
  },
  {
    "name":"liquibase.sqlgenerator.core.AddAutoIncrementGeneratorHsqlH2"
  },
  {
    "name":"liquibase.sqlgenerator.core.AddAutoIncrementGeneratorInformix"
  },
  {
    "name":"liquibase.sqlgenerator.core.AddAutoIncrementGeneratorMySQL"
  },
  {
    "name":"liquibase.sqlgenerator.core.AddAutoIncrementGeneratorSQLite"
  },
  {
    "name":"liquibase.sqlgenerator.core.AddColumnGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.AddColumnGeneratorDefaultClauseBeforeNotNull"
  },
  {
    "name":"liquibase.sqlgenerator.core.AddColumnGeneratorSQLite"
  },
  {
    "name":"liquibase.sqlgenerator.core.AddDefaultValueGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorDerby"
  },
  {
    "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorInformix"
  },
  {
    "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorMSSQL"
  },
  {
    "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorMySQL"
  },
  {
    "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorOracle"
  },
  {
    "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorPostgres"
  },
  {
    "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorSQLite"
  },
  {
    "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorSybase"
  },
  {
    "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorSybaseASA"
  },
  {
    "name":"liquibase.sqlgenerator.core.AddForeignKeyConstraintGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.AddPrimaryKeyGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.AddPrimaryKeyGeneratorInformix"
  },
  {
    "name":"liquibase.sqlgenerator.core.AddUniqueConstraintGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.AddUniqueConstraintGeneratorInformix"
  },
  {
    "name":"liquibase.sqlgenerator.core.AddUniqueConstraintGeneratorTDS"
  },
  {
    "name":"liquibase.sqlgenerator.core.AlterSequenceGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.BatchDmlExecutablePreparedStatementGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.ClearDatabaseChangeLogTableGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.CommentGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.CopyRowsGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.CreateDatabaseChangeLogLockTableGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.CreateDatabaseChangeLogTableGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.CreateDatabaseChangeLogTableGeneratorSybase"
  },
  {
    "name":"liquibase.sqlgenerator.core.CreateIndexGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.CreateIndexGeneratorFirebird"
  },
  {
    "name":"liquibase.sqlgenerator.core.CreateIndexGeneratorPostgres"
  },
  {
    "name":"liquibase.sqlgenerator.core.CreateProcedureGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.CreateSequenceGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.CreateSequenceGeneratorSnowflake"
  },
  {
    "name":"liquibase.sqlgenerator.core.CreateTableGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.CreateTableGeneratorInformix"
  },
  {
    "name":"liquibase.sqlgenerator.core.CreateViewGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.CreateViewGeneratorInformix"
  },
  {
    "name":"liquibase.sqlgenerator.core.DeleteGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.DropColumnGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.DropDefaultValueGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.DropDefaultValueGeneratorSnowflake"
  },
  {
    "name":"liquibase.sqlgenerator.core.DropForeignKeyConstraintGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.DropIndexGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.DropPrimaryKeyGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.DropProcedureGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.DropProcedureGeneratorSnowflake"
  },
  {
    "name":"liquibase.sqlgenerator.core.DropSequenceGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.DropTableGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.DropUniqueConstraintGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.DropViewGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.GetNextChangeSetSequenceValueGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.GetViewDefinitionGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorDB2"
  },
  {
    "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorDerby"
  },
  {
    "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorFirebird"
  },
  {
    "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorHsql"
  },
  {
    "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorInformix"
  },
  {
    "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorMSSQL"
  },
  {
    "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorOracle"
  },
  {
    "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorPostgres"
  },
  {
    "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorSnowflake"
  },
  {
    "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorSybase"
  },
  {
    "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorSybaseASA"
  },
  {
    "name":"liquibase.sqlgenerator.core.InitializeDatabaseChangeLogLockTableGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.InsertDataChangeGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.InsertGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorDB2"
  },
  {
    "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorH2"
  },
  {
    "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorHsql"
  },
  {
    "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorInformix"
  },
  {
    "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorMSSQL"
  },
  {
    "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorMySQL"
  },
  {
    "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorOracle"
  },
  {
    "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorPostgres"
  },
  {
    "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorSQLite"
  },
  {
    "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorSnowflake"
  },
  {
    "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorSybaseASA"
  },
  {
    "name":"liquibase.sqlgenerator.core.InsertSetGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.LockDatabaseChangeLogGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.MarkChangeSetRanGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.ModifyDataTypeGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.RawParameterizedSqlGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.RawSqlGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.ReindexGeneratorSQLite"
  },
  {
    "name":"liquibase.sqlgenerator.core.RemoveChangeSetRanStatusGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.RenameColumnGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.RenameSequenceGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.RenameTableGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.RenameTableGeneratorSnowflake"
  },
  {
    "name":"liquibase.sqlgenerator.core.RenameViewGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.RenameViewGeneratorSnowflake"
  },
  {
    "name":"liquibase.sqlgenerator.core.ReorganizeTableGeneratorDB2"
  },
  {
    "name":"liquibase.sqlgenerator.core.RuntimeGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.SelectFromDatabaseChangeLogGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.SelectFromDatabaseChangeLogLockGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.SetColumnRemarksGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.SetColumnRemarksGeneratorSnowflake"
  },
  {
    "name":"liquibase.sqlgenerator.core.SetNullableGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.SetTableRemarksGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.SetTableRemarksGeneratorSnowflake"
  },
  {
    "name":"liquibase.sqlgenerator.core.SetViewRemarksGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.StoredProcedureGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.TableIsEmptyGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.TableRowCountGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.TagDatabaseGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.UnlockDatabaseChangeLogGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.UpdateChangeSetChecksumGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.UpdateDataChangeGenerator"
  },
  {
    "name":"liquibase.sqlgenerator.core.UpdateGenerator"
  },
  {
    "name":"org.ktorm.entity.Entity"
  },
  {
    "name":"org.ktorm.expression.AggregateExpression"
  },
  {
    "name":"org.ktorm.expression.ArgumentExpression"
  },
  {
    "name":"org.ktorm.expression.BetweenExpression"
  },
  {
    "name":"org.ktorm.expression.BinaryExpression"
  },
  {
    "name":"org.ktorm.expression.CaseWhenExpression"
  },
  {
    "name":"org.ktorm.expression.CastingExpression"
  },
  {
    "name":"org.ktorm.expression.ColumnAssignmentExpression"
  },
  {
    "name":"org.ktorm.expression.ColumnDeclaringExpression"
  },
  {
    "name":"org.ktorm.expression.ColumnExpression"
  },
  {
    "name":"org.ktorm.expression.DeleteExpression"
  },
  {
    "name":"org.ktorm.expression.ExistsExpression"
  },
  {
    "name":"org.ktorm.expression.FunctionExpression"
  },
  {
    "name":"org.ktorm.expression.InListExpression"
  },
  {
    "name":"org.ktorm.expression.InsertExpression"
  },
  {
    "name":"org.ktorm.expression.InsertFromQueryExpression"
  },
  {
    "name":"org.ktorm.expression.JoinExpression"
  },
  {
    "name":"org.ktorm.expression.OrderByExpression"
  },
  {
    "name":"org.ktorm.expression.QueryExpression"
  },
  {
    "name":"org.ktorm.expression.QuerySourceExpression"
  },
  {
    "name":"org.ktorm.expression.ScalarExpression"
  },
  {
    "name":"org.ktorm.expression.SelectExpression"
  },
  {
    "name":"org.ktorm.expression.SqlExpression"
  },
  {
    "name":"org.ktorm.expression.SqlExpressionVisitor"
  },
  {
    "name":"org.ktorm.expression.SqlExpressionVisitor$DefaultImpls",
    "methods":[{"name":"visitAggregate","parameterTypes":["org.ktorm.expression.SqlExpressionVisitor","org.ktorm.expression.AggregateExpression"] }, {"name":"visitArgument","parameterTypes":["org.ktorm.expression.SqlExpressionVisitor","org.ktorm.expression.ArgumentExpression"] }, {"name":"visitBinary","parameterTypes":["org.ktorm.expression.SqlExpressionVisitor","org.ktorm.expression.BinaryExpression"] }, {"name":"visitColumn","parameterTypes":["org.ktorm.expression.SqlExpressionVisitor","org.ktorm.expression.ColumnExpression"] }, {"name":"visitColumnDeclaring","parameterTypes":["org.ktorm.expression.SqlExpressionVisitor","org.ktorm.expression.ColumnDeclaringExpression"] }, {"name":"visitExpressionList","parameterTypes":["org.ktorm.expression.SqlExpressionVisitor","java.util.List","kotlin.jvm.functions.Function1"] }, {"name":"visitJoin","parameterTypes":["org.ktorm.expression.SqlExpressionVisitor","org.ktorm.expression.JoinExpression"] }, {"name":"visitQuery","parameterTypes":["org.ktorm.expression.SqlExpressionVisitor","org.ktorm.expression.QueryExpression"] }, {"name":"visitQuerySource","parameterTypes":["org.ktorm.expression.SqlExpressionVisitor","org.ktorm.expression.QuerySourceExpression"] }, {"name":"visitSelect","parameterTypes":["org.ktorm.expression.SqlExpressionVisitor","org.ktorm.expression.SelectExpression"] }, {"name":"visitTable","parameterTypes":["org.ktorm.expression.SqlExpressionVisitor","org.ktorm.expression.TableExpression"] }]
  },
  {
    "name":"org.ktorm.expression.TableExpression"
  },
  {
    "name":"org.ktorm.expression.UnaryExpression"
  },
  {
    "name":"org.ktorm.expression.UnionExpression"
  },
  {
    "name":"org.ktorm.expression.UpdateExpression"
  },
  {
    "name":"org.ktorm.expression.WindowFrameBoundExpression"
  },
  {
    "name":"org.ktorm.expression.WindowFunctionExpression"
  },
  {
    "name":"org.ktorm.expression.WindowSpecificationExpression"
  },
  {
    "name":"org.ktorm.schema.Table"
  },
  {
    "name":"org.ktorm.support.postgresql.BulkInsertExpression"
  },
  {
    "name":"org.ktorm.support.postgresql.CubeExpression"
  },
  {
    "name":"org.ktorm.support.postgresql.DefaultValueExpression"
  },
  {
    "name":"org.ktorm.support.postgresql.HStoreExpression"
  },
  {
    "name":"org.ktorm.support.postgresql.ILikeExpression"
  },
  {
    "name":"org.ktorm.support.postgresql.InsertOrUpdateExpression"
  },
  {
    "name":"org.ktorm.support.postgresql.PostgreSqlExpressionVisitor"
  },
  {
    "name":"org.ktorm.support.postgresql.PostgreSqlExpressionVisitor$DefaultImpls",
    "methods":[{"name":"visit","parameterTypes":["org.ktorm.support.postgresql.PostgreSqlExpressionVisitor","org.ktorm.expression.SqlExpression"] }, {"name":"visitScalar","parameterTypes":["org.ktorm.support.postgresql.PostgreSqlExpressionVisitor","org.ktorm.expression.ScalarExpression"] }]
  },
  {
    "name":"org.postgresql.Driver"
  },
  {
    "name":"org.postgresql.core.QueryExecutorCloseAction",
    "fields":[{"name":"pgStream"}]
  },
  {
    "name":"org.postgresql.jdbc.PgStatement",
    "fields":[{"name":"cancelTimerTask"}, {"name":"isClosed"}, {"name":"statementState"}]
  },
  {
    "name":"org.slf4j.Logger",
    "methods":[{"name":"debug","parameterTypes":["java.lang.String","java.lang.Throwable"] }, {"name":"error","parameterTypes":["java.lang.String","java.lang.Throwable"] }, {"name":"info","parameterTypes":["java.lang.String","java.lang.Throwable"] }, {"name":"isDebugEnabled","parameterTypes":[] }, {"name":"isErrorEnabled","parameterTypes":[] }, {"name":"isInfoEnabled","parameterTypes":[] }, {"name":"isTraceEnabled","parameterTypes":[] }, {"name":"isWarnEnabled","parameterTypes":[] }, {"name":"trace","parameterTypes":["java.lang.String","java.lang.Throwable"] }, {"name":"warn","parameterTypes":["java.lang.String","java.lang.Throwable"] }]
  },
  {
    "name":"org.slf4j.LoggerFactory",
    "methods":[{"name":"getLogger","parameterTypes":["java.lang.String"] }]
  },
  {
    "name":"sun.security.provider.MD5",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"sun.security.provider.NativePRNG",
    "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["java.security.SecureRandomParameters"] }]
  },
  {
    "name":"sun.security.provider.SHA",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"sun.security.provider.SHA2$SHA256",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
  "name":"org.ktorm.expression.SqlExpressionVisitor$DefaultImpls",
  "methods":[{"name":"visitArgument","parameterTypes":["org.ktorm.expression.SqlExpressionVisitor","org.ktorm.expression.ArgumentExpression"] }, {"name":"visitBinary","parameterTypes":["org.ktorm.expression.SqlExpressionVisitor","org.ktorm.expression.BinaryExpression"] }, {"name":"visitColumn","parameterTypes":["org.ktorm.expression.SqlExpressionVisitor","org.ktorm.expression.ColumnExpression"] }, {"name":"visitColumnAssignment","parameterTypes":["org.ktorm.expression.SqlExpressionVisitor","org.ktorm.expression.ColumnAssignmentExpression"] }, {"name":"visitColumnDeclaring","parameterTypes":["org.ktorm.expression.SqlExpressionVisitor","org.ktorm.expression.ColumnDeclaringExpression"] }, {"name":"visitExpressionList","parameterTypes":["org.ktorm.expression.SqlExpressionVisitor","java.util.List","kotlin.jvm.functions.Function1"] }, {"name":"visitInsert","parameterTypes":["org.ktorm.expression.SqlExpressionVisitor","org.ktorm.expression.InsertExpression"] }, {"name":"visitJoin","parameterTypes":["org.ktorm.expression.SqlExpressionVisitor","org.ktorm.expression.JoinExpression"] }, {"name":"visitQuery","parameterTypes":["org.ktorm.expression.SqlExpressionVisitor","org.ktorm.expression.QueryExpression"] }, {"name":"visitQuerySource","parameterTypes":["org.ktorm.expression.SqlExpressionVisitor","org.ktorm.expression.QuerySourceExpression"] }, {"name":"visitSelect","parameterTypes":["org.ktorm.expression.SqlExpressionVisitor","org.ktorm.expression.SelectExpression"] }, {"name":"visitTable","parameterTypes":["org.ktorm.expression.SqlExpressionVisitor","org.ktorm.expression.TableExpression"] }, {"name":"visitUpdate","parameterTypes":["org.ktorm.expression.SqlExpressionVisitor","org.ktorm.expression.UpdateExpression"] }]
  }