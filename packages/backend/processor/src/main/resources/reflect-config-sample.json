
  {
    "name": "android.os.Build$VERSION"
  },
  {
    "name": "android.util.Log"
  },
  {
    "name": "ch.qos.logback.classic.encoder.PatternLayoutEncoder",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.DateConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LevelConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LoggerConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.MessageConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.ThreadConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.util.DefaultJoranConfigurator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.ConsoleAppender",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.OutputStreamAppender",
    "methods": [
      {
        "name": "setEncoder",
        "parameterTypes": [
          "ch.qos.logback.core.encoder.Encoder"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.encoder.Encoder",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.encoder.LayoutWrappingEncoder",
    "methods": [
      {
        "name": "setParent",
        "parameterTypes": [
          "ch.qos.logback.core.spi.ContextAware"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
    "methods": [
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.spi.ContextAware",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.HmacCore$HmacSHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.PBKDF2Core$HmacSHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "hollybike.api.ApplicationKt",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "configureSerialization",
        "parameterTypes": [
          "io.ktor.server.application.Application"
        ]
      },
      {
        "name": "main",
        "parameterTypes": []
      },
      {
        "name": "module",
        "parameterTypes": [
          "io.ktor.server.application.Application"
        ]
      }
    ]
  },
  {
    "name": "io.ktor.network.selector.InterestSuspensionsMap",
    "fields": [
      {
        "name": "acceptHandlerReference"
      },
      {
        "name": "connectHandlerReference"
      },
      {
        "name": "readHandlerReference"
      },
      {
        "name": "writeHandlerReference"
      }
    ]
  },
  {
    "name": "io.ktor.network.selector.LockFreeMPSCQueue",
    "fields": [
      {
        "name": "_cur"
      }
    ]
  },
  {
    "name": "io.ktor.network.selector.LockFreeMPSCQueueCore",
    "fields": [
      {
        "name": "_next"
      },
      {
        "name": "_state"
      }
    ]
  },
  {
    "name": "io.ktor.network.selector.SelectableBase",
    "fields": [
      {
        "name": "_interestedOps"
      }
    ]
  },
  {
    "name": "io.ktor.server.application.Application"
  },
  {
    "name": "io.ktor.server.cio.internal.WeakTimeoutQueue$WeakTimeoutCoroutine",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "io.ktor.util.collections.CopyOnWriteHashMap",
    "fields": [
      {
        "name": "current"
      }
    ]
  },
  {
    "name": "io.ktor.util.internal.LockFreeLinkedListNode",
    "fields": [
      {
        "name": "_next"
      },
      {
        "name": "_prev"
      },
      {
        "name": "_removedRef"
      }
    ]
  },
  {
    "name": "io.ktor.utils.io.ByteBufferChannel",
    "fields": [
      {
        "name": "_closed"
      },
      {
        "name": "_readOp"
      },
      {
        "name": "_state"
      },
      {
        "name": "_writeOp"
      }
    ]
  },
  {
    "name": "io.ktor.utils.io.core.internal.ChunkBuffer",
    "fields": [
      {
        "name": "nextRef"
      },
      {
        "name": "refCount"
      }
    ]
  },
  {
    "name": "io.ktor.utils.io.internal.CancellableReusableContinuation",
    "fields": [
      {
        "name": "jobCancellationHandler"
      },
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "io.ktor.utils.io.internal.JoiningState",
    "fields": [
      {
        "name": "_closeWaitJob"
      }
    ]
  },
  {
    "name": "io.ktor.utils.io.internal.RingBufferCapacity",
    "fields": [
      {
        "name": "_availableForRead$internal"
      },
      {
        "name": "_availableForWrite$internal"
      },
      {
        "name": "_pendingToFlush"
      }
    ]
  },
  {
    "name": "io.ktor.utils.io.pool.DefaultPool",
    "fields": [
      {
        "name": "top"
      }
    ]
  },
  {
    "name": "java.io.FilePermission"
  },
  {
    "name": "java.lang.ClassValue"
  },
  {
    "name": "java.lang.RuntimePermission"
  },
  {
    "name": "java.lang.SecurityManager",
    "methods": [
      {
        "name": "checkPermission",
        "parameterTypes": [
          "java.security.Permission"
        ]
      }
    ]
  },
  {
    "name": "java.lang.System",
    "methods": [
      {
        "name": "getSecurityManager",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Thread",
    "fields": [
      {
        "name": "threadLocalRandomProbe"
      }
    ]
  },
  {
    "name": "java.net.NetPermission"
  },
  {
    "name": "java.net.SocketPermission"
  },
  {
    "name": "java.net.StandardSocketOptions"
  },
  {
    "name": "java.net.URLPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.security.AccessController",
    "methods": [
      {
        "name": "doPrivileged",
        "parameterTypes": [
          "java.security.PrivilegedExceptionAction"
        ]
      }
    ]
  },
  {
    "name": "java.security.AllPermission"
  },
  {
    "name": "java.security.SecureRandomParameters"
  },
  {
    "name": "java.security.SecurityPermission"
  },
  {
    "name": "java.util.PropertyPermission"
  },
  {
    "name": "java.util.concurrent.atomic.AtomicBoolean",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "java.util.concurrent.atomic.AtomicReference",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "java.util.concurrent.atomic.Striped64",
    "fields": [
      {
        "name": "base"
      },
      {
        "name": "cellsBusy"
      }
    ]
  },
  {
    "name": "javax.smartcardio.CardPermission"
  },
  {
    "name": "kotlin.Metadata",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bv",
        "parameterTypes": []
      },
      {
        "name": "d1",
        "parameterTypes": []
      },
      {
        "name": "d2",
        "parameterTypes": []
      },
      {
        "name": "k",
        "parameterTypes": []
      },
      {
        "name": "mv",
        "parameterTypes": []
      },
      {
        "name": "pn",
        "parameterTypes": []
      },
      {
        "name": "xi",
        "parameterTypes": []
      },
      {
        "name": "xs",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "kotlin.SafePublicationLazyImpl",
    "fields": [
      {
        "name": "_value"
      }
    ]
  },
  {
    "name": "kotlin.Unit"
  },
  {
    "name": "kotlin.jvm.internal.DefaultConstructorMarker"
  },
  {
    "name": "kotlin.reflect.jvm.internal.ReflectionFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "kotlin.reflect.jvm.internal.impl.resolve.scopes.DescriptorKindFilter",
    "allPublicFields": true
  },
  {
    "name": "kotlinx.coroutines.CancellableContinuationImpl",
    "fields": [
      {
        "name": "_decisionAndIndex"
      },
      {
        "name": "_parentHandle"
      },
      {
        "name": "_state"
      }
    ]
  },
  {
    "name": "kotlinx.coroutines.CancelledContinuation",
    "fields": [
      {
        "name": "_resumed"
      }
    ]
  },
  {
    "name": "kotlinx.coroutines.CompletedExceptionally",
    "fields": [
      {
        "name": "_handled"
      }
    ]
  },
  {
    "name": "kotlinx.coroutines.DispatchedCoroutine",
    "fields": [
      {
        "name": "_decision"
      }
    ]
  },
  {
    "name": "kotlinx.coroutines.EventLoopImplBase",
    "fields": [
      {
        "name": "_delayed"
      },
      {
        "name": "_isCompleted"
      },
      {
        "name": "_queue"
      }
    ]
  },
  {
    "name": "kotlinx.coroutines.InvokeOnCancelling",
    "fields": [
      {
        "name": "_invoked"
      }
    ]
  },
  {
    "name": "kotlinx.coroutines.JobSupport",
    "fields": [
      {
        "name": "_parentHandle"
      },
      {
        "name": "_state"
      }
    ]
  },
  {
    "name": "kotlinx.coroutines.JobSupport$Finishing",
    "fields": [
      {
        "name": "_exceptionsHolder"
      },
      {
        "name": "_isCompleting"
      },
      {
        "name": "_rootCause"
      }
    ]
  },
  {
    "name": "kotlinx.coroutines.channels.BufferedChannel",
    "fields": [
      {
        "name": "_closeCause"
      },
      {
        "name": "bufferEnd"
      },
      {
        "name": "bufferEndSegment"
      },
      {
        "name": "closeHandler"
      },
      {
        "name": "completedExpandBuffersAndPauseFlag"
      },
      {
        "name": "receiveSegment"
      },
      {
        "name": "receivers"
      },
      {
        "name": "sendSegment"
      },
      {
        "name": "sendersAndCloseStatus"
      }
    ]
  },
  {
    "name": "kotlinx.coroutines.internal.AtomicOp",
    "fields": [
      {
        "name": "_consensus"
      }
    ]
  },
  {
    "name": "kotlinx.coroutines.internal.ConcurrentLinkedListNode",
    "fields": [
      {
        "name": "_next"
      },
      {
        "name": "_prev"
      }
    ]
  },
  {
    "name": "kotlinx.coroutines.internal.DispatchedContinuation",
    "fields": [
      {
        "name": "_reusableCancellableContinuation"
      }
    ]
  },
  {
    "name": "kotlinx.coroutines.internal.LimitedDispatcher",
    "fields": [
      {
        "name": "runningWorkers"
      }
    ]
  },
  {
    "name": "kotlinx.coroutines.internal.LockFreeLinkedListNode",
    "fields": [
      {
        "name": "_next"
      },
      {
        "name": "_prev"
      },
      {
        "name": "_removedRef"
      }
    ]
  },
  {
    "name": "kotlinx.coroutines.internal.LockFreeTaskQueue",
    "fields": [
      {
        "name": "_cur"
      }
    ]
  },
  {
    "name": "kotlinx.coroutines.internal.LockFreeTaskQueueCore",
    "fields": [
      {
        "name": "_next"
      },
      {
        "name": "_state"
      }
    ]
  },
  {
    "name": "kotlinx.coroutines.internal.Segment",
    "fields": [
      {
        "name": "cleanedAndPointers"
      }
    ]
  },
  {
    "name": "kotlinx.coroutines.internal.ThreadSafeHeap",
    "fields": [
      {
        "name": "_size"
      }
    ]
  },
  {
    "name": "kotlinx.coroutines.scheduling.CoroutineScheduler",
    "fields": [
      {
        "name": "_isTerminated"
      },
      {
        "name": "controlState"
      },
      {
        "name": "parkedWorkersStack"
      }
    ]
  },
  {
    "name": "kotlinx.coroutines.scheduling.CoroutineScheduler$Worker",
    "fields": [
      {
        "name": "workerCtl"
      }
    ]
  },
  {
    "name": "kotlinx.coroutines.scheduling.WorkQueue",
    "fields": [
      {
        "name": "blockingTasksInBuffer"
      },
      {
        "name": "consumerIndex"
      },
      {
        "name": "lastScheduledTask"
      },
      {
        "name": "producerIndex"
      }
    ]
  },
  {
    "name": "org.postgresql.Driver"
  },
  {
    "name": "org.postgresql.core.QueryExecutorCloseAction",
    "fields": [
      {
        "name": "pgStream"
      }
    ]
  },
  {
    "name": "org.postgresql.jdbc.PgStatement",
    "fields": [
      {
        "name": "cancelTimerTask"
      },
      {
        "name": "isClosed"
      },
      {
        "name": "statementState"
      }
    ]
  },
  {
    "name": "org.slf4j.Logger",
    "methods": [
      {
        "name": "debug",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "error",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "info",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "isDebugEnabled",
        "parameterTypes": []
      },
      {
        "name": "isErrorEnabled",
        "parameterTypes": []
      },
      {
        "name": "isInfoEnabled",
        "parameterTypes": []
      },
      {
        "name": "isTraceEnabled",
        "parameterTypes": []
      },
      {
        "name": "isWarnEnabled",
        "parameterTypes": []
      },
      {
        "name": "trace",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "warn",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "org.slf4j.LoggerFactory",
    "methods": [
      {
        "name": "getLogger",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "sun.security.provider.NativePRNG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.security.SecureRandomParameters"
        ]
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA2$SHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.ArrayList",
    "condition": {
      "typeReachable": "liquibase.snapshot.SnapshotGeneratorFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "java.util.HashSet",
    "condition": {
      "typeReachable": "liquibase.lockservice.StandardLockService"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "java.util.concurrent.ConcurrentHashMap",
    "condition": {
      "typeReachable": "liquibase.snapshot.SnapshotGeneratorFactory"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.AbstractExtensibleObject",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.AbstractExtensibleObjectBeanInfo"
  },
  {
    "name": "liquibase.AbstractExtensibleObjectCustomizer"
  },
  {
    "name": "liquibase.change.AbstractChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.AbstractChangeBeanInfo"
  },
  {
    "name": "liquibase.change.AbstractChangeCustomizer"
  },
  {
    "name": "liquibase.change.AbstractSQLChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isIgnoreOriginalSplitStatements",
        "parameterTypes": [
        ]
      },
      {
        "name": "isSplitStatements",
        "parameterTypes": [
        ]
      },
      {
        "name": "isStripComments",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.AbstractSQLChangeBeanInfo"
  },
  {
    "name": "liquibase.change.AbstractSQLChangeCustomizer"
  },
  {
    "name": "liquibase.change.AbstractTableChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.AbstractTableChangeBeanInfo"
  },
  {
    "name": "liquibase.change.AbstractTableChangeCustomizer"
  },
  {
    "name": "liquibase.change.ChangeFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "liquibase.Scope"
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.AbstractModifyDataChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.core.AbstractModifyDataChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.AbstractModifyDataChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.AddAutoIncrementChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.AddAutoIncrementChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.AddAutoIncrementChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.AddColumnChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.AddColumnChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.AddColumnChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.AddDefaultValueChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.AddDefaultValueChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.AddDefaultValueChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.AddForeignKeyConstraintChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.AddForeignKeyConstraintChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.AddForeignKeyConstraintChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.AddLookupTableChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.AddLookupTableChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.AddLookupTableChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.AddNotNullConstraintChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.AddNotNullConstraintChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.AddNotNullConstraintChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.AddPrimaryKeyChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.AddPrimaryKeyChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.AddPrimaryKeyChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.AddUniqueConstraintChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.AddUniqueConstraintChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.AddUniqueConstraintChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.AlterSequenceChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      },
      {
        "name": "isOrdered",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.AlterSequenceChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.AlterSequenceChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.CreateIndexChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      },
      {
        "name": "isUnique",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.CreateIndexChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.CreateIndexChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.CreateProcedureChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      },
      {
        "name": "isRelativeToChangelogFile",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.CreateProcedureChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.CreateProcedureChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.CreateSequenceChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      },
      {
        "name": "isOrdered",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.CreateSequenceChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.CreateSequenceChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.CreateTableChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.CreateTableChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.CreateTableChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.CreateViewChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.CreateViewChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.CreateViewChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.DeleteDataChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.DeleteDataChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.DeleteDataChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.DropAllForeignKeyConstraintsChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.DropAllForeignKeyConstraintsChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.DropAllForeignKeyConstraintsChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.DropColumnChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.DropColumnChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.DropColumnChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.DropDefaultValueChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.DropDefaultValueChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.DropDefaultValueChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.DropForeignKeyConstraintChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.DropForeignKeyConstraintChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.DropForeignKeyConstraintChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.DropIndexChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.DropIndexChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.DropIndexChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.DropNotNullConstraintChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.DropNotNullConstraintChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.DropNotNullConstraintChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.DropPrimaryKeyChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.DropPrimaryKeyChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.DropPrimaryKeyChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.DropProcedureChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.DropProcedureChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.DropProcedureChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.DropSequenceChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.DropSequenceChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.DropSequenceChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.DropTableChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      },
      {
        "name": "isCascadeConstraints",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.DropTableChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.DropTableChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.DropUniqueConstraintChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.DropUniqueConstraintChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.DropUniqueConstraintChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.DropViewChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      },
      {
        "name": "isIfExists",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.DropViewChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.DropViewChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.EmptyChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.EmptyChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.EmptyChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.ExecuteShellCommandChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.ExecuteShellCommandChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.ExecuteShellCommandChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.InsertDataChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.InsertDataChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.InsertDataChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.LoadDataChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      },
      {
        "name": "isRelativeToChangelogFile",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.LoadDataChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.LoadDataChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.LoadUpdateDataChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.LoadUpdateDataChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.LoadUpdateDataChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.MergeColumnChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.MergeColumnChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.MergeColumnChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.ModifyDataTypeChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.ModifyDataTypeChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.ModifyDataTypeChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.OutputChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.OutputChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.OutputChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.RawSQLChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      },
      {
        "name": "isOriginalSplitStatements",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.RawSQLChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.RawSQLChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.RenameColumnChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.RenameColumnChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.RenameColumnChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.RenameSequenceChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.RenameSequenceChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.RenameSequenceChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.RenameTableChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.RenameTableChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.RenameTableChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.RenameViewChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.RenameViewChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.RenameViewChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.SQLFileChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      },
      {
        "name": "isDoExpandExpressionsInGenerateChecksum",
        "parameterTypes": [
        ]
      },
      {
        "name": "isOriginalSplitStatements",
        "parameterTypes": [
        ]
      },
      {
        "name": "isRelativeToChangelogFile",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.SQLFileChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.SQLFileChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.SetColumnRemarksChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.SetColumnRemarksChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.SetColumnRemarksChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.SetTableRemarksChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.SetTableRemarksChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.SetTableRemarksChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.StopChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.StopChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.StopChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.TagDatabaseChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.TagDatabaseChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.TagDatabaseChangeCustomizer"
  },
  {
    "name": "liquibase.change.core.UpdateDataChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.core.UpdateDataChangeBeanInfo"
  },
  {
    "name": "liquibase.change.core.UpdateDataChangeCustomizer"
  },
  {
    "name": "liquibase.change.custom.CustomChangeWrapper",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.change.custom.CustomChangeWrapperBeanInfo"
  },
  {
    "name": "liquibase.change.custom.CustomChangeWrapperCustomizer"
  },
  {
    "name": "liquibase.changelog.ChangeLogHistoryServiceFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "liquibase.Scope"
        ]
      }
    ]
  },
  {
    "name": "liquibase.changelog.StandardChangeLogHistoryService",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.command.CommandFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "liquibase.Scope"
        ]
      }
    ]
  },
  {
    "name": "liquibase.command.core.UpdateCommandStep",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.command.core.helpers.ChangeExecListenerCommandStep",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.command.core.helpers.DatabaseChangelogCommandStep",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.command.core.helpers.DbUrlConnectionArgumentsCommandStep",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.command.core.helpers.DbUrlConnectionCommandStep",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.command.core.helpers.ShowSummaryArgument",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.configuration.ConfiguredValueModifierFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "liquibase.Scope"
        ]
      }
    ]
  },
  {
    "name": "liquibase.configuration.LiquibaseConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "liquibase.Scope"
        ]
      }
    ]
  },
  {
    "name": "liquibase.database.LiquibaseTableNamesFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "liquibase.Scope"
        ]
      }
    ]
  },
  {
    "name": "liquibase.database.core.PostgresDatabase",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.BinaryTypeSnowflake",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.BlobType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.BooleanType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.ClobType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.ClobTypeSnowflake",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.DateTimeType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.DoubleDataTypeSnowflake",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.DoubleType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.TextDataTypeSnowflake",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.TimestampNTZTypeSnowflake",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.executor.ExecutorService",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "liquibase.Scope"
        ]
      }
    ]
  },
  {
    "name": "liquibase.executor.jvm.JdbcExecutor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.lockservice.StandardLockService",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      }
    ]
  },
  {
    "name": "liquibase.logging.core.LogServiceFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "liquibase.Scope"
        ]
      }
    ]
  },
  {
    "name": "liquibase.logging.mdc.MdcManagerFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "liquibase.Scope"
        ]
      }
    ]
  },
  {
    "name": "liquibase.plugin.AbstractPlugin",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.plugin.AbstractPluginBeanInfo"
  },
  {
    "name": "liquibase.plugin.AbstractPluginCustomizer"
  },
  {
    "name": "liquibase.report.ShowSummaryGeneratorFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "liquibase.Scope"
        ]
      }
    ]
  }
