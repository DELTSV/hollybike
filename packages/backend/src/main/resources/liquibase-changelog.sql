-- liquibase formatted sql

-- changeset denis:1
CREATE TABLE IF NOT EXISTS "associations"
(
    "id_association" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    "name"           VARCHAR(255)                             NOT NULL,
    "status"         INTEGER DEFAULT 1                        NOT NULL,
    CONSTRAINT "associations_pk" PRIMARY KEY ("id_association")
);

CREATE TABLE IF NOT EXISTS "users"
(
    "id_user"     INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    "email"       VARCHAR                                  NOT NULL,
    "username"    VARCHAR                                  NOT NULL,
    "password"    VARCHAR                                  NOT NULL,
    "status"      INTEGER DEFAULT 1                        NOT NULL,
    "scope"       INTEGER DEFAULT 1                        NOT NULL,
    "association" INTEGER                                  NOT NULL,
    "last_login"  TIMESTAMP WITHOUT TIME ZONE              NOT NULL,
    CONSTRAINT "users_pk" PRIMARY KEY ("id_user")
);
CREATE UNIQUE INDEX IF NOT EXISTS "associations_name_uindex" ON "associations" ("name");
CREATE UNIQUE INDEX IF NOT EXISTS "users_email_uindex" ON "users" ("email");
ALTER TABLE "users"
    ADD CONSTRAINT "users_associations_id_association_fk" FOREIGN KEY ("association") REFERENCES "associations" ("id_association") ON UPDATE NO ACTION ON DELETE NO ACTION;

-- changeset denis:2 context:dev
INSERT INTO associations (name)
VALUES ('Motoloup');

-- changeset denis:3
ALTER TABLE users
    ADD COLUMN IF NOT EXISTS profile_picture VARCHAR(2048) DEFAULT null;
ALTER TABLE associations
    ADD COLUMN IF NOT EXISTS picture VARCHAR(2048) DEFAULT null;

-- changeset loic:1
CREATE TABLE IF NOT EXISTS events
(
    id_event         INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL
        CONSTRAINT events_pk
            PRIMARY KEY,
    name             VARCHAR(1000)                            NOT NULL,
    description      VARCHAR(1000),
    association      INTEGER                                  NOT NULL
        CONSTRAINT events_association_fk
            REFERENCES associations,
    image            VARCHAR(2048),
    status           INTEGER   DEFAULT 1                      NOT NULL,
    owner            INTEGER                                  NOT NULL
        CONSTRAINT events_owner_fk
            REFERENCES users ON DELETE CASCADE,
    start_date_time  TIMESTAMP                                NOT NULL,
    end_date_time    TIMESTAMP,
    create_date_time TIMESTAMP DEFAULT NOW()                  NOT NULL,
    update_date_time TIMESTAMP DEFAULT NOW()                  NOT NULL
);

-- changeset loic:2

CREATE TABLE IF NOT EXISTS users_participate_events
(
    id_participation INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL
        CONSTRAINT users_participate_events_pk
            PRIMARY KEY,
    "user"           INTEGER                                  NOT NULL
        CONSTRAINT users_participate_events_user_fk
            REFERENCES users ON DELETE CASCADE,
    event            INTEGER                                  NOT NULL
        CONSTRAINT users_participate_events_event_fk
            REFERENCES events ON DELETE CASCADE,
    role             INTEGER                                  NOT NULL DEFAULT 1,
    joined_date_time TIMESTAMP                                NOT NULL DEFAULT NOW() NOT NULL,
    CONSTRAINT users_participate_events_unique_key
        UNIQUE ("user", event)
);

-- changeset denis:4
CREATE TABLE IF NOT EXISTS invitations
(
    id_invitation INTEGER GENERATED BY DEFAULT AS IDENTITY         NOT NULL PRIMARY KEY,
    role          INTEGER                                          NOT NULL,
    status        INTEGER                                                   DEFAULT 1 NOT NULL,
    association   INTEGER REFERENCES associations (id_association) NOT NULL,
    creator       INTEGER REFERENCES users (id_user)               NOT NULL,
    expiration    TIMESTAMP,
    creation      TIMESTAMP                                        NOT NULL DEFAULT NOW(),
    uses          INTEGER                                          NOT NULL DEFAULT 0,
    max_uses      INTEGER                                                   DEFAULT NULL
);

-- changeset loic:3 context:test
INSERT INTO associations (name)
VALUES ('Root Association');
INSERT INTO associations (name)
VALUES ('Association 1');
INSERT INTO associations (name)
VALUES ('Association 2');
INSERT INTO associations (name, status)
VALUES ('Disabled Association', -1);

INSERT INTO users (email, username, password, association, last_login, scope)
VALUES ('root@hollybike.fr', 'root', 'JDJhJDA2JHJwVWE4dWdyUi9URERJdWt4cll0VU9yLmRQSExWdTUzdlB4bWFQbktZanppZVd2V01vdFpX',
        1, now(), 3);

INSERT INTO users (email, username, password, association, last_login, scope)
VALUES ('user1@hollybike.fr', 'user1',
        'JDJhJDA2JHJwVWE4dWdyUi9URERJdWt4cll0VU9yLmRQSExWdTUzdlB4bWFQbktZanppZVd2V01vdFpX', 2, now(), 1);
INSERT INTO users (email, username, password, association, last_login, scope)
VALUES ('user2@hollybike.fr', 'user2',
        'JDJhJDA2JHJwVWE4dWdyUi9URERJdWt4cll0VU9yLmRQSExWdTUzdlB4bWFQbktZanppZVd2V01vdFpX', 2, now(), 1);
INSERT INTO users (email, username, password, association, last_login, scope)
VALUES ('user3@hollybike.fr', 'user3',
        'JDJhJDA2JHJwVWE4dWdyUi9URERJdWt4cll0VU9yLmRQSExWdTUzdlB4bWFQbktZanppZVd2V01vdFpX', 3, now(), 1);
INSERT INTO users (email, username, password, association, last_login, scope)
VALUES ('user4@hollybike.fr', 'user4',
        'JDJhJDA2JHJwVWE4dWdyUi9URERJdWt4cll0VU9yLmRQSExWdTUzdlB4bWFQbktZanppZVd2V01vdFpX', 3, now(), 1);
INSERT INTO users (email, username, password, association, last_login, scope)
VALUES ('user5@hollybike.fr', 'user5',
        'JDJhJDA2JHJwVWE4dWdyUi9URERJdWt4cll0VU9yLmRQSExWdTUzdlB4bWFQbktZanppZVd2V01vdFpX', 3, now(), 1);
INSERT INTO users (email, username, password, association, last_login, scope)
VALUES ('user6@hollybike.fr', 'user6',
        'JDJhJDA2JHJwVWE4dWdyUi9URERJdWt4cll0VU9yLmRQSExWdTUzdlB4bWFQbktZanppZVd2V01vdFpX', 4, now(), 1);


INSERT INTO users (email, username, password, association, last_login, scope, status)
VALUES ('disabled1@hollybike.fr', 'disabled1',
        'JDJhJDA2JHJwVWE4dWdyUi9URERJdWt4cll0VU9yLmRQSExWdTUzdlB4bWFQbktZanppZVd2V01vdFpX', 2, now(), 1, -1);
INSERT INTO users (email, username, password, association, last_login, scope, status)
VALUES ('disabled2@hollybike.fr', 'disabled2',
        'JDJhJDA2JHJwVWE4dWdyUi9URERJdWt4cll0VU9yLmRQSExWdTUzdlB4bWFQbktZanppZVd2V01vdFpX', 3, now(), 1, -1);
INSERT INTO users (email, username, password, association, last_login, scope, status)
VALUES ('disabled3@hollybike.fr', 'disabled3',
        'JDJhJDA2JHJwVWE4dWdyUi9URERJdWt4cll0VU9yLmRQSExWdTUzdlB4bWFQbktZanppZVd2V01vdFpX', 4, now(), 1, -1);


INSERT INTO users (email, username, password, association, last_login, scope)
VALUES ('admin1@hollybike.fr', 'admin1',
        'JDJhJDA2JHJwVWE4dWdyUi9URERJdWt4cll0VU9yLmRQSExWdTUzdlB4bWFQbktZanppZVd2V01vdFpX', 2, now(), 2);
INSERT INTO users (email, username, password, association, last_login, scope)
VALUES ('admin2@hollybike.fr', 'admin2',
        'JDJhJDA2JHJwVWE4dWdyUi9URERJdWt4cll0VU9yLmRQSExWdTUzdlB4bWFQbktZanppZVd2V01vdFpX', 3, now(), 2);
INSERT INTO users (email, username, password, association, last_login, scope)
VALUES ('admin3@hollybike.fr', 'admin3',
        'JDJhJDA2JHJwVWE4dWdyUi9URERJdWt4cll0VU9yLmRQSExWdTUzdlB4bWFQbktZanppZVd2V01vdFpX', 4, now(), 2);

INSERT INTO events (name, description, association, image, status, owner, start_date_time, end_date_time)
VALUES ('Event 1 - Asso 1', 'Description 1', 2, null, 1, 2, now() + interval '1' day, now() + interval '2' day);
INSERT INTO users_participate_events ("user", event, role)
VALUES (2, 1, 2);

INSERT INTO events (name, description, association, image, status, owner, start_date_time, end_date_time)
VALUES ('Event 2 - Asso 1', 'Description 2', 2, null, 2, 2, now() - interval '1' day, now() + interval '1' day);
INSERT INTO users_participate_events ("user", event, role)
VALUES (2, 2, 2);
INSERT INTO users_participate_events ("user", event, role)
VALUES (3, 2, 1);

INSERT INTO events (name, description, association, image, status, owner, start_date_time, end_date_time)
VALUES ('Event 3 - Asso 1', 'Description 3', 2, null, 3, 2, now() + interval '1' day, now() + interval '2' day);
INSERT INTO users_participate_events ("user", event, role)
VALUES (2, 3, 2);

INSERT INTO events (name, description, association, image, status, owner, start_date_time, end_date_time)
VALUES ('Event 4 - Asso 1', 'Description 4', 2, null, 4, 2, now() - interval '2' day, now() - interval '1' day);
INSERT INTO users_participate_events ("user", event, role)
VALUES (2, 4, 2);

INSERT INTO events (name, description, association, image, status, owner, start_date_time, end_date_time)
VALUES ('Event 5 - Asso 1', 'Description 5', 2, null, 2, 3, now() - interval '1' day, null);
INSERT INTO users_participate_events ("user", event, role)
VALUES (3, 5, 2);

INSERT INTO events (name, description, association, image, status, owner, start_date_time, end_date_time)
VALUES ('Event 6 - Asso 1', 'Description 6', 2, null, 2, 3, now() + interval '1' day, now() + interval '2' day);
INSERT INTO users_participate_events ("user", event, role)
VALUES (3, 6, 2);

INSERT INTO events (name, description, association, image, status, owner, start_date_time, end_date_time)
VALUES ('Event 1 - Asso 2', 'Description 1', 3, null, 2, 4, now() + interval '1' day, now() + interval '2' day);
INSERT INTO users_participate_events ("user", event, role)
VALUES (4, 7, 2);
INSERT INTO users_participate_events ("user", event, role)
VALUES (5, 7, 2);

INSERT INTO events (name, description, association, image, status, owner, start_date_time, end_date_time)
VALUES ('Event 2 - Asso 2', 'Description 2', 3, null, 1, 5, now() + interval '1' day, now() + interval '2' day);
INSERT INTO users_participate_events ("user", event, role)
VALUES (5, 8, 2);

INSERT INTO events (name, description, association, image, status, owner, start_date_time, end_date_time)
VALUES ('Event 3 - Asso 2', 'Description 3', 3, null, 2, 5, now() + interval '1' day, now() + interval '2' day);
INSERT INTO users_participate_events ("user", event, role)
VALUES (5, 9, 2);

INSERT INTO events (name, description, association, image, status, owner, start_date_time, end_date_time)
VALUES ('Event 4 - Asso 2', 'Description 4', 3, null, 2, 5, now() + interval '1' day, now() + interval '2' day);
INSERT INTO users_participate_events ("user", event, role)
VALUES (5, 10, 2);
INSERT INTO users_participate_events ("user", event, role)
VALUES (4, 10, 1);
INSERT INTO users_participate_events ("user", event, role)
VALUES (6, 10, 1);

INSERT INTO events (name, description, association, image, status, owner, start_date_time, end_date_time)
VALUES ('Event 5 - Asso 2', 'Description 5', 3, null, 2, 5, now() + interval '1' day, now() + interval '2' day);
INSERT INTO users_participate_events ("user", event, role)
VALUES (5, 11, 2);
INSERT INTO users_participate_events ("user", event, role)
VALUES (4, 11, 2);
INSERT INTO users_participate_events ("user", event, role)
VALUES (6, 11, 1);


-- changeset denis:5
CREATE EXTENSION IF NOT EXISTS unaccent;

-- changeset denis:6
ALTER TABLE associations
    ADD COLUMN IF NOT EXISTS update_default_user BOOLEAN DEFAULT false,
    ADD COLUMN IF NOT EXISTS update_association  BOOLEAN DEFAULT false,
    ADD COLUMN IF NOT EXISTS create_invitation   BOOLEAN DEFAULT false;


-- changeset denis:7 context:"!test and premise"
INSERT INTO associations (name)
VALUES ('Hollybike');
INSERT INTO users (email, username, password, association, last_login, scope)
VALUES ('admin@hollybike.fr', 'Admin', 'JDJhJDA2JEtHaDN5c0pIc1guU2s5V3g2Ulpjek95YXAvZVpkQllPNjlPMUFHTFhuV1pua2RyZnpzVDdh
', LASTVAL(), NOW(), 2);

-- changeset loic:4

CREATE TABLE IF NOT EXISTS event_images
(
    id_event_image   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL
        CONSTRAINT event_images_pk
            PRIMARY KEY,
    owner            INTEGER                                  NOT NULL
        CONSTRAINT event_images_owner_fk
            REFERENCES users ON DELETE CASCADE,
    event            INTEGER                                  NOT NULL
        CONSTRAINT event_images_event_fk
            REFERENCES events ON DELETE CASCADE,
    path             VARCHAR(2048)                            NOT NULL,
    size             INTEGER                                  NOT NULL,
    upload_date_time TIMESTAMP DEFAULT NOW()                  NOT NULL
);

-- changeset loic:5

ALTER TABLE users_participate_events
    ADD COLUMN IF NOT EXISTS is_images_public BOOLEAN DEFAULT TRUE NOT NULL;

ALTER TABLE users_participate_events
    ADD COLUMN IF NOT EXISTS is_joined BOOLEAN DEFAULT TRUE NOT NULL;

ALTER TABLE users_participate_events
    ADD COLUMN IF NOT EXISTS left_date_time TIMESTAMP DEFAULT NULL;

ALTER TABLE users_participate_events
    RENAME TO event_participations;

-- changeset loic:6

CREATE TABLE IF NOT EXISTS positions
(
    id_position      INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL
        CONSTRAINT positions_pk
            PRIMARY KEY,
    latitude         DOUBLE PRECISION                         NOT NULL,
    longitude        DOUBLE PRECISION                         NOT NULL,
    altitude         DOUBLE PRECISION,
    place_type       VARCHAR(255)                             NOT NULL,
    place_name       VARCHAR(255),
    city_name        VARCHAR(255),
    country_name     VARCHAR(255),
    county_name      VARCHAR(255),
    state_name       VARCHAR(255),
    create_date_time TIMESTAMP DEFAULT NOW()                  NOT NULL,
    CONSTRAINT positions_unique_key
        UNIQUE (latitude, longitude)
);

-- changeset loic:7

ALTER TABLE event_images
    ADD COLUMN IF NOT EXISTS taken_date_time TIMESTAMP;

ALTER TABLE event_images
    ADD COLUMN IF NOT EXISTS width INTEGER NOT NULL;

ALTER TABLE event_images
    ADD COLUMN IF NOT EXISTS height INTEGER NOT NULL;

ALTER TABLE event_images
    ADD COLUMN IF NOT EXISTS position INTEGER;

ALTER TABLE event_images
    ADD CONSTRAINT event_images_position_fk FOREIGN KEY (position) REFERENCES positions (id_position) ON DELETE SET NULL;

--changeset denis:8
CREATE TABLE IF NOT EXISTS journeys (
    id_journey INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    name VARCHAR(1000) NOT NULL,
    file VARCHAR(2048) DEFAULT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT NOW(),
    creator INTEGER NOT NULL REFERENCES users(id_user),
    association INTEGER NOT NULL REFERENCES associations(id_association)
);

--changeset denis:9
ALTER TABLE journeys
    ADD COLUMN start INTEGER REFERENCES positions(id_position) DEFAULT NULL,
    ADD COLUMN "end" INTEGER REFERENCES positions(id_position) DEFAULT NULL;

-- changeset loic:8

ALTER TABLE events
    ADD COLUMN IF NOT EXISTS journey INTEGER REFERENCES journeys(id_journey) DEFAULT NULL;

-- changeset loic:9

ALTER TABLE journeys
    ADD COLUMN IF NOT EXISTS preview_image VARCHAR(2048) DEFAULT NULL;

-- changeset loic:10

ALTER TABLE events
    DROP CONSTRAINT events_journey_fkey;

ALTER TABLE events
    ADD CONSTRAINT events_journey_fkey FOREIGN KEY (journey) REFERENCES journeys(id_journey) ON DELETE SET NULL;

--changeset denis:10
CREATE TABLE IF NOT EXISTS notifications (
    id_notification INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    "user" INTEGER NOT NULL REFERENCES users(id_user),
    data TEXT NOT NULL,
    creation TIMESTAMP NOT NULL DEFAULT NOW(),
    seen BOOLEAN NOT NULL DEFAULT false
);
-- changeset loic:11

ALTER TABLE journeys
    ADD COLUMN IF NOT EXISTS total_distance INTEGER DEFAULT NULL;

ALTER TABLE journeys
    ADD COLUMN IF NOT EXISTS min_elevation DOUBLE PRECISION DEFAULT NULL;

ALTER TABLE journeys
    ADD COLUMN IF NOT EXISTS max_elevation DOUBLE PRECISION DEFAULT NULL;

ALTER TABLE journeys
    ADD COLUMN IF NOT EXISTS total_elevation_gain DOUBLE PRECISION DEFAULT NULL;

ALTER TABLE journeys
    ADD COLUMN IF NOT EXISTS total_elevation_loss DOUBLE PRECISION DEFAULT NULL;

ALTER TABLE journeys
    ADD COLUMN IF NOT EXISTS destination INTEGER REFERENCES positions(id_position) DEFAULT NULL;

--changetset denis:11
ALTER TABLE users
    ADD COLUMN role VARCHAR(255) DEFAULT NULL;

--changeset denis:12
CREATE TABLE IF NOT EXISTS tokens (
    id_token INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    "user" INTEGER NOT NULL REFERENCES users(id_user),
    device VARCHAR(40) NOT NULL,
    token VARCHAR(35) NOT NULL,
    last_use TIMESTAMP NOT NULL DEFAULT NOW()
);

--changeset denis:13
CREATE TABLE IF NOT EXISTS users_events_positions (
    id_user_event_position INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    "user" INTEGER NOT NULL REFERENCES users(id_user),
    event INTEGER NOT NULL REFERENCES events(id_event),
    latitude DOUBLE PRECISION NOT NULL,
    longitude DOUBLE PRECISION NOT NULL,
    altitude DOUBLE PRECISION NOT NULL,
    time TIMESTAMP NOT NULL,
    speed DOUBLE PRECISION NOT NULL
);

ALTER TABLE event_participations
    ADD COLUMN IF NOT EXISTS journey VARCHAR(2048) DEFAULT NULL;

--changeset denis:14
CREATE TABLE IF NOT EXISTS users_journeys (
    id_user_journey INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    journey VARCHAR(2048) NOT NULL,
    avg_speed DOUBLE PRECISION DEFAULT NULL,
    total_elevation_loss DOUBLE PRECISION DEFAULT NULL,
    total_elevation_gain DOUBLE PRECISION DEFAULT NULL,
    total_distance INTEGER DEFAULT NULL,
    min_elevation DOUBLE PRECISION DEFAULT NULL,
    max_elevation DOUBLE PRECISION DEFAULT NULL,
    total_time BIGINT DEFAULT NULL,
    max_speed DOUBLE PRECISION DEFAULT NULL
);

ALTER TABLE event_participations
    DROP COLUMN journey;
ALTER TABLE event_participations
    ADD COLUMN journey INTEGER DEFAULT NULL REFERENCES users_journeys(id_user_journey),
    ADD CONSTRAINT event_participation_user_journey_fk FOREIGN KEY (journey) REFERENCES users_journeys(id_user_journey);

ALTER TABLE users_events_positions
    ADD COLUMN heading DOUBLE PRECISION NOT NULL DEFAULT 0.0,
    ADD COLUMN acceleration_x DOUBLE PRECISION NOT NULL DEFAULT 0.0,
    ADD COLUMN acceleration_y DOUBLE PRECISION NOT NULL DEFAULT 0.0,
    ADD COLUMN acceleration_z DOUBLE PRECISION NOT NULL DEFAULT 0.0;

--changeset loic:12

ALTER TABLE users_events_positions
    ADD COLUMN IF NOT EXISTS accuracy DOUBLE PRECISION NOT NULL DEFAULT 0.0,
    ADD COLUMN IF NOT EXISTS speed_accuracy DOUBLE PRECISION NOT NULL DEFAULT 0.0;

--changeset loic:13

ALTER TABLE users_events_positions
    ADD COLUMN IF NOT EXISTS participation INTEGER NOT NULL REFERENCES event_participations(id_participation);

--changeset denis:15
CREATE TABLE IF NOT EXISTS expenses (
    id_expense INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    name VARCHAR(2048) NOT NULL,
    description TEXT DEFAULT NULL,
    date TIMESTAMP NOT NULL DEFAULT NOW(),
    amount INTEGER NOT NULL,
    event INTEGER NOT NULL REFERENCES events(id_event)
);

ALTER TABLE events
    ADD COLUMN IF NOT EXISTS budget INTEGER DEFAULT NULL;

--changeset denis:16
ALTER TABLE expenses
    ADD COLUMN IF NOT EXISTS proof VARCHAR(2048) DEFAULT NULL;

--changeset loic:14

ALTER TABLE expenses
    DROP CONSTRAINT IF EXISTS expenses_event_fkey;

ALTER TABLE expenses
    ADD CONSTRAINT expenses_event_fkey FOREIGN KEY (event) REFERENCES events(id_event) ON DELETE CASCADE;

--changeset loic:15

ALTER TABLE users_journeys
    ADD COLUMN IF NOT EXISTS created_at TIMESTAMP NOT NULL DEFAULT NOW(),
    ADD COLUMN IF NOT EXISTS avg_g_force DOUBLE PRECISION DEFAULT NULL,
    ADD COLUMN IF NOT EXISTS max_g_force DOUBLE PRECISION DEFAULT NULL;

--changeset loic:16

ALTER TABLE event_participations
    DROP CONSTRAINT event_participation_user_journey_fk;

ALTER TABLE event_participations
    ADD CONSTRAINT event_participation_user_journey_fk FOREIGN KEY (journey) REFERENCES users_journeys(id_user_journey) ON DELETE SET NULL;

--changeset loic:17

ALTER TABLE users_events_positions
    DROP CONSTRAINT users_events_positions_event_fkey;

ALTER TABLE users_events_positions
    ADD CONSTRAINT users_events_positions_event_fkey FOREIGN KEY (event) REFERENCES events(id_event) ON DELETE CASCADE;

ALTER TABLE users_events_positions
    DROP CONSTRAINT users_events_positions_user_fkey;

ALTER TABLE users_events_positions
    ADD CONSTRAINT users_events_positions_user_fkey FOREIGN KEY ("user") REFERENCES users(id_user) ON DELETE CASCADE;

--changeset loic:18

ALTER TABLE users_journeys
    ADD COLUMN IF NOT EXISTS "user" INTEGER DEFAULT NULL REFERENCES users(id_user);

ALTER TABLE users_journeys
    DROP CONSTRAINT IF EXISTS users_journeys_user_fkey;

ALTER TABLE users_journeys
    ADD CONSTRAINT users_journeys_user_fkey FOREIGN KEY ("user") REFERENCES users(id_user) ON DELETE CASCADE;