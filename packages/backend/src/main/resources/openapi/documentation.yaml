openapi: "3.0.0"
info:
  title: "hollybike API"
  description: "hollybike API"
  version: "1.0.0"
servers:
- url: "https://hollybike"
- url: "http://localhost:8080"
paths:
  /{...}:
    get:
      description: ""
      parameters:
      - name: "..."
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            text/html:
              schema:
                type: "string"
  /json/kotlinx-serialization:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Map_String"
  /metrics-micrometer:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /ws:
    get:
      description: ""
      parameters:
      - name: "Connection"
        in: "header"
        required: true
        description: "Websocket Connection parameter"
        schema:
          type: "string"
      - name: "Upgrade"
        in: "header"
        required: true
        description: "Websocket Upgrade parameter"
        schema:
          type: "string"
      - name: "Sec-WebSocket-Key"
        in: "header"
        required: true
        description: "Websocket Sec-WebSocket-Key parameter"
        schema:
          type: "string"
      responses:
        "101":
          description: "Switching Protocols"
          headers:
            Connection:
              required: true
              schema:
                type: "string"
            Upgrade:
              required: true
              schema:
                type: "string"
            Sec-WebSocket-Accept:
              required: true
              schema:
                type: "string"
  /api:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Bienvenue sur l'API hollybike"
  /api/{path}:
    get:
      description: ""
      parameters:
      - name: "path"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "404":
          description: "Not Found"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Not Found"
  /login:
    post:
      description: ""
      parameters:
      - name: "api"
        in: "query"
        required: false
        schema:
          type: "object"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TLogin"
        required: true
      responses:
        "200":
          description: "OK <br> TODO store and retrieve token from db for auth"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TAuthInfo"
  /logout:
    delete:
      description: ""
      parameters:
      - name: "api"
        in: "query"
        required: false
        schema:
          type: "object"
      responses:
        "204":
          description: "No Content <br> TODO Delete token from DB"
          content:
            '*/*':
              schema:
                type: "object"
  /signin:
    post:
      description: ""
      parameters:
      - name: "api"
        in: "query"
        required: false
        schema:
          type: "object"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TSignin"
        required: true
      responses:
        "200":
          description: "OK <br> TODO store token in db"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TAuthInfo"
components:
  schemas:
    Map:
      type: "object"
      properties: {}
    Map_String:
      type: "string"
    TLogin:
      type: "object"
      properties:
        email:
          type: "string"
        password:
          type: "string"
      required:
      - "email"
      - "password"
    TAuthInfo:
      type: "object"
      properties:
        token:
          type: "string"
      required:
      - "token"
    TSignin:
      type: "object"
      properties:
        email:
          type: "string"
        password:
          type: "string"
      required:
      - "email"
      - "password"